// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: spec.proto

package goautowp

import (
	reflect "reflect"
	sync "sync"

	errdetails "google.golang.org/genproto/googleapis/rpc/errdetails"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PictureItemType int32

const (
	PictureItemType_PICTURE_UNKNOWN    PictureItemType = 0
	PictureItemType_PICTURE_CONTENT    PictureItemType = 1
	PictureItemType_PICTURE_AUTHOR     PictureItemType = 2
	PictureItemType_PICTURE_COPYRIGHTS PictureItemType = 3
)

// Enum value maps for PictureItemType.
var (
	PictureItemType_name = map[int32]string{
		0: "PICTURE_UNKNOWN",
		1: "PICTURE_CONTENT",
		2: "PICTURE_AUTHOR",
		3: "PICTURE_COPYRIGHTS",
	}
	PictureItemType_value = map[string]int32{
		"PICTURE_UNKNOWN":    0,
		"PICTURE_CONTENT":    1,
		"PICTURE_AUTHOR":     2,
		"PICTURE_COPYRIGHTS": 3,
	}
)

func (x PictureItemType) Enum() *PictureItemType {
	p := new(PictureItemType)
	*p = x
	return p
}

func (x PictureItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PictureItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_proto_enumTypes[0].Descriptor()
}

func (PictureItemType) Type() protoreflect.EnumType {
	return &file_spec_proto_enumTypes[0]
}

func (x PictureItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PictureItemType.Descriptor instead.
func (PictureItemType) EnumDescriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{0}
}

type ItemType int32

const (
	ItemType_ITEM_TYPE_UNKNOWN   ItemType = 0
	ItemType_ITEM_TYPE_VEHICLE   ItemType = 1
	ItemType_ITEM_TYPE_ENGINE    ItemType = 2
	ItemType_ITEM_TYPE_CATEGORY  ItemType = 3
	ItemType_ITEM_TYPE_TWINS     ItemType = 4
	ItemType_ITEM_TYPE_BRAND     ItemType = 5
	ItemType_ITEM_TYPE_FACTORY   ItemType = 6
	ItemType_ITEM_TYPE_MUSEUM    ItemType = 7
	ItemType_ITEM_TYPE_PERSON    ItemType = 8
	ItemType_ITEM_TYPE_COPYRIGHT ItemType = 9
)

// Enum value maps for ItemType.
var (
	ItemType_name = map[int32]string{
		0: "ITEM_TYPE_UNKNOWN",
		1: "ITEM_TYPE_VEHICLE",
		2: "ITEM_TYPE_ENGINE",
		3: "ITEM_TYPE_CATEGORY",
		4: "ITEM_TYPE_TWINS",
		5: "ITEM_TYPE_BRAND",
		6: "ITEM_TYPE_FACTORY",
		7: "ITEM_TYPE_MUSEUM",
		8: "ITEM_TYPE_PERSON",
		9: "ITEM_TYPE_COPYRIGHT",
	}
	ItemType_value = map[string]int32{
		"ITEM_TYPE_UNKNOWN":   0,
		"ITEM_TYPE_VEHICLE":   1,
		"ITEM_TYPE_ENGINE":    2,
		"ITEM_TYPE_CATEGORY":  3,
		"ITEM_TYPE_TWINS":     4,
		"ITEM_TYPE_BRAND":     5,
		"ITEM_TYPE_FACTORY":   6,
		"ITEM_TYPE_MUSEUM":    7,
		"ITEM_TYPE_PERSON":    8,
		"ITEM_TYPE_COPYRIGHT": 9,
	}
)

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}

func (x ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_proto_enumTypes[1].Descriptor()
}

func (ItemType) Type() protoreflect.EnumType {
	return &file_spec_proto_enumTypes[1]
}

func (x ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemType.Descriptor instead.
func (ItemType) EnumDescriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{1}
}

type PictureStatus int32

const (
	PictureStatus_PICTURE_STATUS_UNKNOWN  PictureStatus = 0
	PictureStatus_PICTURE_STATUS_ACCEPTED PictureStatus = 1
	PictureStatus_PICTURE_STATUS_REMOVING PictureStatus = 2
	PictureStatus_PICTURE_STATUS_REMOVED  PictureStatus = 3
	PictureStatus_PICTURE_STATUS_INBOX    PictureStatus = 4
)

// Enum value maps for PictureStatus.
var (
	PictureStatus_name = map[int32]string{
		0: "PICTURE_STATUS_UNKNOWN",
		1: "PICTURE_STATUS_ACCEPTED",
		2: "PICTURE_STATUS_REMOVING",
		3: "PICTURE_STATUS_REMOVED",
		4: "PICTURE_STATUS_INBOX",
	}
	PictureStatus_value = map[string]int32{
		"PICTURE_STATUS_UNKNOWN":  0,
		"PICTURE_STATUS_ACCEPTED": 1,
		"PICTURE_STATUS_REMOVING": 2,
		"PICTURE_STATUS_REMOVED":  3,
		"PICTURE_STATUS_INBOX":    4,
	}
)

func (x PictureStatus) Enum() *PictureStatus {
	p := new(PictureStatus)
	*p = x
	return p
}

func (x PictureStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PictureStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_proto_enumTypes[2].Descriptor()
}

func (PictureStatus) Type() protoreflect.EnumType {
	return &file_spec_proto_enumTypes[2]
}

func (x PictureStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PictureStatus.Descriptor instead.
func (PictureStatus) EnumDescriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{2}
}

type ItemPictureType int32

const (
	ItemPictureType_ITEM_PICTURE_UNKNOWN    ItemPictureType = 0
	ItemPictureType_ITEM_PICTURE_CONTENT    ItemPictureType = 1
	ItemPictureType_ITEM_PICTURE_AUTHOR     ItemPictureType = 2
	ItemPictureType_ITEM_PICTURE_COPYRIGHTS ItemPictureType = 3
)

// Enum value maps for ItemPictureType.
var (
	ItemPictureType_name = map[int32]string{
		0: "ITEM_PICTURE_UNKNOWN",
		1: "ITEM_PICTURE_CONTENT",
		2: "ITEM_PICTURE_AUTHOR",
		3: "ITEM_PICTURE_COPYRIGHTS",
	}
	ItemPictureType_value = map[string]int32{
		"ITEM_PICTURE_UNKNOWN":    0,
		"ITEM_PICTURE_CONTENT":    1,
		"ITEM_PICTURE_AUTHOR":     2,
		"ITEM_PICTURE_COPYRIGHTS": 3,
	}
)

func (x ItemPictureType) Enum() *ItemPictureType {
	p := new(ItemPictureType)
	*p = x
	return p
}

func (x ItemPictureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemPictureType) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_proto_enumTypes[3].Descriptor()
}

func (ItemPictureType) Type() protoreflect.EnumType {
	return &file_spec_proto_enumTypes[3]
}

func (x ItemPictureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemPictureType.Descriptor instead.
func (ItemPictureType) EnumDescriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{3}
}

type CommentsType int32

const (
	CommentsType_UNKNOWN          CommentsType = 0
	CommentsType_PICTURES_TYPE_ID CommentsType = 1
	CommentsType_ITEM_TYPE_ID     CommentsType = 2
	CommentsType_VOTINGS_TYPE_ID  CommentsType = 3
	CommentsType_ARTICLES_TYPE_ID CommentsType = 4
	CommentsType_FORUMS_TYPE_ID   CommentsType = 5
)

// Enum value maps for CommentsType.
var (
	CommentsType_name = map[int32]string{
		0: "UNKNOWN",
		1: "PICTURES_TYPE_ID",
		2: "ITEM_TYPE_ID",
		3: "VOTINGS_TYPE_ID",
		4: "ARTICLES_TYPE_ID",
		5: "FORUMS_TYPE_ID",
	}
	CommentsType_value = map[string]int32{
		"UNKNOWN":          0,
		"PICTURES_TYPE_ID": 1,
		"ITEM_TYPE_ID":     2,
		"VOTINGS_TYPE_ID":  3,
		"ARTICLES_TYPE_ID": 4,
		"FORUMS_TYPE_ID":   5,
	}
)

func (x CommentsType) Enum() *CommentsType {
	p := new(CommentsType)
	*p = x
	return p
}

func (x CommentsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommentsType) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_proto_enumTypes[4].Descriptor()
}

func (CommentsType) Type() protoreflect.EnumType {
	return &file_spec_proto_enumTypes[4]
}

func (x CommentsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommentsType.Descriptor instead.
func (CommentsType) EnumDescriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{4}
}

type PulseRequest_Period int32

const (
	PulseRequest_DEFAULT PulseRequest_Period = 0
	PulseRequest_YEAR    PulseRequest_Period = 1
	PulseRequest_MONTH   PulseRequest_Period = 2
)

// Enum value maps for PulseRequest_Period.
var (
	PulseRequest_Period_name = map[int32]string{
		0: "DEFAULT",
		1: "YEAR",
		2: "MONTH",
	}
	PulseRequest_Period_value = map[string]int32{
		"DEFAULT": 0,
		"YEAR":    1,
		"MONTH":   2,
	}
)

func (x PulseRequest_Period) Enum() *PulseRequest_Period {
	p := new(PulseRequest_Period)
	*p = x
	return p
}

func (x PulseRequest_Period) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PulseRequest_Period) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_proto_enumTypes[5].Descriptor()
}

func (PulseRequest_Period) Type() protoreflect.EnumType {
	return &file_spec_proto_enumTypes[5]
}

func (x PulseRequest_Period) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PulseRequest_Period.Descriptor instead.
func (PulseRequest_Period) EnumDescriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{1, 0}
}

type CommentVote_VoteValue int32

const (
	CommentVote_UNKNOWN  CommentVote_VoteValue = 0
	CommentVote_POSITIVE CommentVote_VoteValue = -1
	CommentVote_NEGATIVE CommentVote_VoteValue = 1
)

// Enum value maps for CommentVote_VoteValue.
var (
	CommentVote_VoteValue_name = map[int32]string{
		0:  "UNKNOWN",
		-1: "POSITIVE",
		1:  "NEGATIVE",
	}
	CommentVote_VoteValue_value = map[string]int32{
		"UNKNOWN":  0,
		"POSITIVE": -1,
		"NEGATIVE": 1,
	}
)

func (x CommentVote_VoteValue) Enum() *CommentVote_VoteValue {
	p := new(CommentVote_VoteValue)
	*p = x
	return p
}

func (x CommentVote_VoteValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommentVote_VoteValue) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_proto_enumTypes[6].Descriptor()
}

func (CommentVote_VoteValue) Type() protoreflect.EnumType {
	return &file_spec_proto_enumTypes[6]
}

func (x CommentVote_VoteValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommentVote_VoteValue.Descriptor instead.
func (CommentVote_VoteValue) EnumDescriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{30, 0}
}

type ErrorDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetryInfo           *errdetails.RetryInfo           `protobuf:"bytes,1,opt,name=retryInfo,proto3" json:"retryInfo,omitempty"`
	DebugInfo           *errdetails.DebugInfo           `protobuf:"bytes,2,opt,name=debugInfo,proto3" json:"debugInfo,omitempty"`
	QuotaFailure        *errdetails.QuotaFailure        `protobuf:"bytes,3,opt,name=quotaFailure,proto3" json:"quotaFailure,omitempty"`
	PreconditionFailure *errdetails.PreconditionFailure `protobuf:"bytes,4,opt,name=preconditionFailure,proto3" json:"preconditionFailure,omitempty"`
	BadRequest          *errdetails.BadRequest          `protobuf:"bytes,5,opt,name=badRequest,proto3" json:"badRequest,omitempty"`
	RequestInfo         *errdetails.RequestInfo         `protobuf:"bytes,6,opt,name=requestInfo,proto3" json:"requestInfo,omitempty"`
	Help                *errdetails.Help                `protobuf:"bytes,7,opt,name=help,proto3" json:"help,omitempty"`
	LocalizedMessage    *errdetails.LocalizedMessage    `protobuf:"bytes,8,opt,name=localizedMessage,proto3" json:"localizedMessage,omitempty"`
}

func (x *ErrorDetails) Reset() {
	*x = ErrorDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDetails) ProtoMessage() {}

func (x *ErrorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDetails.ProtoReflect.Descriptor instead.
func (*ErrorDetails) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorDetails) GetRetryInfo() *errdetails.RetryInfo {
	if x != nil {
		return x.RetryInfo
	}
	return nil
}

func (x *ErrorDetails) GetDebugInfo() *errdetails.DebugInfo {
	if x != nil {
		return x.DebugInfo
	}
	return nil
}

func (x *ErrorDetails) GetQuotaFailure() *errdetails.QuotaFailure {
	if x != nil {
		return x.QuotaFailure
	}
	return nil
}

func (x *ErrorDetails) GetPreconditionFailure() *errdetails.PreconditionFailure {
	if x != nil {
		return x.PreconditionFailure
	}
	return nil
}

func (x *ErrorDetails) GetBadRequest() *errdetails.BadRequest {
	if x != nil {
		return x.BadRequest
	}
	return nil
}

func (x *ErrorDetails) GetRequestInfo() *errdetails.RequestInfo {
	if x != nil {
		return x.RequestInfo
	}
	return nil
}

func (x *ErrorDetails) GetHelp() *errdetails.Help {
	if x != nil {
		return x.Help
	}
	return nil
}

func (x *ErrorDetails) GetLocalizedMessage() *errdetails.LocalizedMessage {
	if x != nil {
		return x.LocalizedMessage
	}
	return nil
}

type PulseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period PulseRequest_Period `protobuf:"varint,1,opt,name=period,proto3,enum=goautowp.PulseRequest_Period" json:"period,omitempty"`
}

func (x *PulseRequest) Reset() {
	*x = PulseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulseRequest) ProtoMessage() {}

func (x *PulseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulseRequest.ProtoReflect.Descriptor instead.
func (*PulseRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{1}
}

func (x *PulseRequest) GetPeriod() PulseRequest_Period {
	if x != nil {
		return x.Period
	}
	return PulseRequest_DEFAULT
}

type PulseGrid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line   []float32 `protobuf:"fixed32,1,rep,packed,name=line,proto3" json:"line,omitempty"`
	Color  string    `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	UserId int64     `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *PulseGrid) Reset() {
	*x = PulseGrid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulseGrid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulseGrid) ProtoMessage() {}

func (x *PulseGrid) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulseGrid.ProtoReflect.Descriptor instead.
func (*PulseGrid) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{2}
}

func (x *PulseGrid) GetLine() []float32 {
	if x != nil {
		return x.Line
	}
	return nil
}

func (x *PulseGrid) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *PulseGrid) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PulseLegend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Color  string `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *PulseLegend) Reset() {
	*x = PulseLegend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulseLegend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulseLegend) ProtoMessage() {}

func (x *PulseLegend) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulseLegend.ProtoReflect.Descriptor instead.
func (*PulseLegend) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{3}
}

func (x *PulseLegend) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PulseLegend) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type PulseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Grid   []*PulseGrid   `protobuf:"bytes,1,rep,name=grid,proto3" json:"grid,omitempty"`
	Legend []*PulseLegend `protobuf:"bytes,2,rep,name=legend,proto3" json:"legend,omitempty"`
	Labels []string       `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *PulseResponse) Reset() {
	*x = PulseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulseResponse) ProtoMessage() {}

func (x *PulseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulseResponse.ProtoReflect.Descriptor instead.
func (*PulseResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{4}
}

func (x *PulseResponse) GetGrid() []*PulseGrid {
	if x != nil {
		return x.Grid
	}
	return nil
}

func (x *PulseResponse) GetLegend() []*PulseLegend {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *PulseResponse) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ShortName string  `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Childs    []*Spec `protobuf:"bytes,4,rep,name=childs,proto3" json:"childs,omitempty"`
}

func (x *Spec) Reset() {
	*x = Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spec) ProtoMessage() {}

func (x *Spec) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spec.ProtoReflect.Descriptor instead.
func (*Spec) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{5}
}

func (x *Spec) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Spec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spec) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Spec) GetChilds() []*Spec {
	if x != nil {
		return x.Childs
	}
	return nil
}

type SpecsItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Spec `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SpecsItems) Reset() {
	*x = SpecsItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecsItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecsItems) ProtoMessage() {}

func (x *SpecsItems) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecsItems.ProtoReflect.Descriptor instead.
func (*SpecsItems) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{6}
}

func (x *SpecsItems) GetItems() []*Spec {
	if x != nil {
		return x.Items
	}
	return nil
}

type Perspective struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Perspective) Reset() {
	*x = Perspective{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Perspective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Perspective) ProtoMessage() {}

func (x *Perspective) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Perspective.ProtoReflect.Descriptor instead.
func (*Perspective) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{7}
}

func (x *Perspective) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Perspective) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PerspectivesItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Perspective `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *PerspectivesItems) Reset() {
	*x = PerspectivesItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerspectivesItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerspectivesItems) ProtoMessage() {}

func (x *PerspectivesItems) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerspectivesItems.ProtoReflect.Descriptor instead.
func (*PerspectivesItems) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{8}
}

func (x *PerspectivesItems) GetItems() []*Perspective {
	if x != nil {
		return x.Items
	}
	return nil
}

type PerspectiveGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Perspectives []*Perspective `protobuf:"bytes,3,rep,name=perspectives,proto3" json:"perspectives,omitempty"`
}

func (x *PerspectiveGroup) Reset() {
	*x = PerspectiveGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerspectiveGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerspectiveGroup) ProtoMessage() {}

func (x *PerspectiveGroup) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerspectiveGroup.ProtoReflect.Descriptor instead.
func (*PerspectiveGroup) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{9}
}

func (x *PerspectiveGroup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PerspectiveGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PerspectiveGroup) GetPerspectives() []*Perspective {
	if x != nil {
		return x.Perspectives
	}
	return nil
}

type PerspectivePage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Groups []*PerspectiveGroup `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *PerspectivePage) Reset() {
	*x = PerspectivePage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerspectivePage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerspectivePage) ProtoMessage() {}

func (x *PerspectivePage) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerspectivePage.ProtoReflect.Descriptor instead.
func (*PerspectivePage) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{10}
}

func (x *PerspectivePage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PerspectivePage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PerspectivePage) GetGroups() []*PerspectiveGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type PerspectivePagesItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*PerspectivePage `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *PerspectivePagesItems) Reset() {
	*x = PerspectivePagesItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerspectivePagesItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerspectivePagesItems) ProtoMessage() {}

func (x *PerspectivePagesItems) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerspectivePagesItems.ProtoReflect.Descriptor instead.
func (*PerspectivePagesItems) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{11}
}

func (x *PerspectivePagesItems) GetItems() []*PerspectivePage {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReCaptchaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *ReCaptchaConfig) Reset() {
	*x = ReCaptchaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReCaptchaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReCaptchaConfig) ProtoMessage() {}

func (x *ReCaptchaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReCaptchaConfig.ProtoReflect.Descriptor instead.
func (*ReCaptchaConfig) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{12}
}

func (x *ReCaptchaConfig) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type BrandIcons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Css   string `protobuf:"bytes,2,opt,name=css,proto3" json:"css,omitempty"`
}

func (x *BrandIcons) Reset() {
	*x = BrandIcons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandIcons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandIcons) ProtoMessage() {}

func (x *BrandIcons) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandIcons.ProtoReflect.Descriptor instead.
func (*BrandIcons) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{13}
}

func (x *BrandIcons) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *BrandIcons) GetCss() string {
	if x != nil {
		return x.Css
	}
	return ""
}

type AclEnforceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource  string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Privilege string `protobuf:"bytes,2,opt,name=privilege,proto3" json:"privilege,omitempty"`
}

func (x *AclEnforceRequest) Reset() {
	*x = AclEnforceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AclEnforceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclEnforceRequest) ProtoMessage() {}

func (x *AclEnforceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclEnforceRequest.ProtoReflect.Descriptor instead.
func (*AclEnforceRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{14}
}

func (x *AclEnforceRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *AclEnforceRequest) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

type AclEnforceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AclEnforceResult) Reset() {
	*x = AclEnforceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AclEnforceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclEnforceResult) ProtoMessage() {}

func (x *AclEnforceResult) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclEnforceResult.ProtoReflect.Descriptor instead.
func (*AclEnforceResult) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{15}
}

func (x *AclEnforceResult) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type VehicleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Childs []*VehicleType `protobuf:"bytes,4,rep,name=childs,proto3" json:"childs,omitempty"`
}

func (x *VehicleType) Reset() {
	*x = VehicleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleType) ProtoMessage() {}

func (x *VehicleType) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleType.ProtoReflect.Descriptor instead.
func (*VehicleType) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{16}
}

func (x *VehicleType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VehicleType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VehicleType) GetChilds() []*VehicleType {
	if x != nil {
		return x.Childs
	}
	return nil
}

type VehicleTypeItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*VehicleType `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *VehicleTypeItems) Reset() {
	*x = VehicleTypeItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleTypeItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleTypeItems) ProtoMessage() {}

func (x *VehicleTypeItems) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleTypeItems.ProtoReflect.Descriptor instead.
func (*VehicleTypeItems) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{17}
}

func (x *VehicleTypeItems) GetItems() []*VehicleType {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetBrandVehicleTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId int32 `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
}

func (x *GetBrandVehicleTypesRequest) Reset() {
	*x = GetBrandVehicleTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandVehicleTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandVehicleTypesRequest) ProtoMessage() {}

func (x *GetBrandVehicleTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandVehicleTypesRequest.ProtoReflect.Descriptor instead.
func (*GetBrandVehicleTypesRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{18}
}

func (x *GetBrandVehicleTypesRequest) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

type BrandVehicleTypeItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*BrandVehicleType `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BrandVehicleTypeItems) Reset() {
	*x = BrandVehicleTypeItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandVehicleTypeItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandVehicleTypeItems) ProtoMessage() {}

func (x *BrandVehicleTypeItems) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandVehicleTypeItems.ProtoReflect.Descriptor instead.
func (*BrandVehicleTypeItems) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{19}
}

func (x *BrandVehicleTypeItems) GetItems() []*BrandVehicleType {
	if x != nil {
		return x.Items
	}
	return nil
}

type BrandVehicleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Catname    string `protobuf:"bytes,3,opt,name=catname,proto3" json:"catname,omitempty"`
	ItemsCount string `protobuf:"bytes,4,opt,name=items_count,json=itemsCount,proto3" json:"items_count,omitempty"`
}

func (x *BrandVehicleType) Reset() {
	*x = BrandVehicleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandVehicleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandVehicleType) ProtoMessage() {}

func (x *BrandVehicleType) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandVehicleType.ProtoReflect.Descriptor instead.
func (*BrandVehicleType) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{20}
}

func (x *BrandVehicleType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandVehicleType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandVehicleType) GetCatname() string {
	if x != nil {
		return x.Catname
	}
	return ""
}

func (x *BrandVehicleType) GetItemsCount() string {
	if x != nil {
		return x.ItemsCount
	}
	return ""
}

type CreateContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateContactRequest) Reset() {
	*x = CreateContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContactRequest) ProtoMessage() {}

func (x *CreateContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContactRequest.ProtoReflect.Descriptor instead.
func (*CreateContactRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{21}
}

func (x *CreateContactRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteContactRequest) Reset() {
	*x = DeleteContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContactRequest) ProtoMessage() {}

func (x *DeleteContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContactRequest.ProtoReflect.Descriptor instead.
func (*DeleteContactRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteContactRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetContactRequest) Reset() {
	*x = GetContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactRequest) ProtoMessage() {}

func (x *GetContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactRequest.ProtoReflect.Descriptor instead.
func (*GetContactRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{23}
}

func (x *GetContactRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type APIImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Src      string `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	Width    int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height   int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Filesize int32  `protobuf:"varint,5,opt,name=filesize,proto3" json:"filesize,omitempty"`
}

func (x *APIImage) Reset() {
	*x = APIImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIImage) ProtoMessage() {}

func (x *APIImage) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIImage.ProtoReflect.Descriptor instead.
func (*APIImage) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{24}
}

func (x *APIImage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APIImage) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *APIImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *APIImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *APIImage) GetFilesize() int32 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

type APIUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Deleted     bool                   `protobuf:"varint,3,opt,name=deleted,proto3" json:"deleted,omitempty"`
	LongAway    bool                   `protobuf:"varint,4,opt,name=long_away,json=longAway,proto3" json:"long_away,omitempty"`
	Green       bool                   `protobuf:"varint,5,opt,name=green,proto3" json:"green,omitempty"`
	Route       []string               `protobuf:"bytes,6,rep,name=route,proto3" json:"route,omitempty"`
	Identity    string                 `protobuf:"bytes,7,opt,name=identity,proto3" json:"identity,omitempty"`
	Avatar      *APIImage              `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Gravatar    string                 `protobuf:"bytes,9,opt,name=gravatar,proto3" json:"gravatar,omitempty"`
	LastOnline  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_online,json=lastOnline,proto3" json:"last_online,omitempty"`
	SpecsWeight float64                `protobuf:"fixed64,11,opt,name=specs_weight,json=specsWeight,proto3" json:"specs_weight,omitempty"`
}

func (x *APIUser) Reset() {
	*x = APIUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIUser) ProtoMessage() {}

func (x *APIUser) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIUser.ProtoReflect.Descriptor instead.
func (*APIUser) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{25}
}

func (x *APIUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APIUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APIUser) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *APIUser) GetLongAway() bool {
	if x != nil {
		return x.LongAway
	}
	return false
}

func (x *APIUser) GetGreen() bool {
	if x != nil {
		return x.Green
	}
	return false
}

func (x *APIUser) GetRoute() []string {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *APIUser) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *APIUser) GetAvatar() *APIImage {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *APIUser) GetGravatar() string {
	if x != nil {
		return x.Gravatar
	}
	return ""
}

func (x *APIUser) GetLastOnline() *timestamppb.Timestamp {
	if x != nil {
		return x.LastOnline
	}
	return nil
}

func (x *APIUser) GetSpecsWeight() float64 {
	if x != nil {
		return x.SpecsWeight
	}
	return 0
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactUserId int64    `protobuf:"varint,1,opt,name=contact_user_id,json=contactUserId,proto3" json:"contact_user_id,omitempty"`
	User          *APIUser `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{26}
}

func (x *Contact) GetContactUserId() int64 {
	if x != nil {
		return x.ContactUserId
	}
	return 0
}

func (x *Contact) GetUser() *APIUser {
	if x != nil {
		return x.User
	}
	return nil
}

type ContactItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Contact `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ContactItems) Reset() {
	*x = ContactItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactItems) ProtoMessage() {}

func (x *ContactItems) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactItems.ProtoReflect.Descriptor instead.
func (*ContactItems) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{27}
}

func (x *ContactItems) GetItems() []*Contact {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *GetContactsRequest) Reset() {
	*x = GetContactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsRequest) ProtoMessage() {}

func (x *GetContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsRequest.ProtoReflect.Descriptor instead.
func (*GetContactsRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{28}
}

func (x *GetContactsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type CommentVoteItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CommentVote `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CommentVoteItems) Reset() {
	*x = CommentVoteItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentVoteItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentVoteItems) ProtoMessage() {}

func (x *CommentVoteItems) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentVoteItems.ProtoReflect.Descriptor instead.
func (*CommentVoteItems) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{29}
}

func (x *CommentVoteItems) GetItems() []*CommentVote {
	if x != nil {
		return x.Items
	}
	return nil
}

type CommentVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value CommentVote_VoteValue `protobuf:"varint,1,opt,name=value,proto3,enum=goautowp.CommentVote_VoteValue" json:"value,omitempty"`
	User  *APIUser              `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CommentVote) Reset() {
	*x = CommentVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentVote) ProtoMessage() {}

func (x *CommentVote) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentVote.ProtoReflect.Descriptor instead.
func (*CommentVote) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{30}
}

func (x *CommentVote) GetValue() CommentVote_VoteValue {
	if x != nil {
		return x.Value
	}
	return CommentVote_UNKNOWN
}

func (x *CommentVote) GetUser() *APIUser {
	if x != nil {
		return x.User
	}
	return nil
}

type APIBanItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Until    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=until,proto3" json:"until,omitempty"`
	ByUserId int64                  `protobuf:"varint,2,opt,name=by_user_id,json=byUserId,proto3" json:"by_user_id,omitempty"`
	ByUser   *APIUser               `protobuf:"bytes,3,opt,name=by_user,json=byUser,proto3" json:"by_user,omitempty"`
	Reason   string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *APIBanItem) Reset() {
	*x = APIBanItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIBanItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIBanItem) ProtoMessage() {}

func (x *APIBanItem) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIBanItem.ProtoReflect.Descriptor instead.
func (*APIBanItem) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{31}
}

func (x *APIBanItem) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

func (x *APIBanItem) GetByUserId() int64 {
	if x != nil {
		return x.ByUserId
	}
	return 0
}

func (x *APIBanItem) GetByUser() *APIUser {
	if x != nil {
		return x.ByUser
	}
	return nil
}

func (x *APIBanItem) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type APITrafficTopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip          string      `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Count       int32       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Ban         *APIBanItem `protobuf:"bytes,3,opt,name=ban,proto3" json:"ban,omitempty"`
	InWhitelist bool        `protobuf:"varint,4,opt,name=in_whitelist,json=inWhitelist,proto3" json:"in_whitelist,omitempty"`
	WhoisUrl    string      `protobuf:"bytes,5,opt,name=whois_url,json=whoisUrl,proto3" json:"whois_url,omitempty"`
}

func (x *APITrafficTopItem) Reset() {
	*x = APITrafficTopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITrafficTopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITrafficTopItem) ProtoMessage() {}

func (x *APITrafficTopItem) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITrafficTopItem.ProtoReflect.Descriptor instead.
func (*APITrafficTopItem) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{32}
}

func (x *APITrafficTopItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *APITrafficTopItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *APITrafficTopItem) GetBan() *APIBanItem {
	if x != nil {
		return x.Ban
	}
	return nil
}

func (x *APITrafficTopItem) GetInWhitelist() bool {
	if x != nil {
		return x.InWhitelist
	}
	return false
}

func (x *APITrafficTopItem) GetWhoisUrl() string {
	if x != nil {
		return x.WhoisUrl
	}
	return ""
}

type APITrafficTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*APITrafficTopItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *APITrafficTopResponse) Reset() {
	*x = APITrafficTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITrafficTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITrafficTopResponse) ProtoMessage() {}

func (x *APITrafficTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITrafficTopResponse.ProtoReflect.Descriptor instead.
func (*APITrafficTopResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{33}
}

func (x *APITrafficTopResponse) GetItems() []*APITrafficTopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type APIGetIPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip     string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *APIGetIPRequest) Reset() {
	*x = APIGetIPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIGetIPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIGetIPRequest) ProtoMessage() {}

func (x *APIGetIPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIGetIPRequest.ProtoReflect.Descriptor instead.
func (*APIGetIPRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{34}
}

func (x *APIGetIPRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *APIGetIPRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type APIIPRights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddToBlacklist      bool `protobuf:"varint,1,opt,name=add_to_blacklist,json=addToBlacklist,proto3" json:"add_to_blacklist,omitempty"`
	RemoveFromBlacklist bool `protobuf:"varint,2,opt,name=remove_from_blacklist,json=removeFromBlacklist,proto3" json:"remove_from_blacklist,omitempty"`
}

func (x *APIIPRights) Reset() {
	*x = APIIPRights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIIPRights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIIPRights) ProtoMessage() {}

func (x *APIIPRights) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIIPRights.ProtoReflect.Descriptor instead.
func (*APIIPRights) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{35}
}

func (x *APIIPRights) GetAddToBlacklist() bool {
	if x != nil {
		return x.AddToBlacklist
	}
	return false
}

func (x *APIIPRights) GetRemoveFromBlacklist() bool {
	if x != nil {
		return x.RemoveFromBlacklist
	}
	return false
}

type APIIP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string       `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Hostname  string       `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Blacklist *APIBanItem  `protobuf:"bytes,3,opt,name=blacklist,proto3" json:"blacklist,omitempty"`
	Rights    *APIIPRights `protobuf:"bytes,4,opt,name=rights,proto3" json:"rights,omitempty"`
}

func (x *APIIP) Reset() {
	*x = APIIP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIIP) ProtoMessage() {}

func (x *APIIP) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIIP.ProtoReflect.Descriptor instead.
func (*APIIP) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{36}
}

func (x *APIIP) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *APIIP) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *APIIP) GetBlacklist() *APIBanItem {
	if x != nil {
		return x.Blacklist
	}
	return nil
}

func (x *APIIP) GetRights() *APIIPRights {
	if x != nil {
		return x.Rights
	}
	return nil
}

type APICreateFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email   string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Captcha string `protobuf:"bytes,4,opt,name=captcha,proto3" json:"captcha,omitempty"`
}

func (x *APICreateFeedbackRequest) Reset() {
	*x = APICreateFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APICreateFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APICreateFeedbackRequest) ProtoMessage() {}

func (x *APICreateFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APICreateFeedbackRequest.ProtoReflect.Descriptor instead.
func (*APICreateFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{37}
}

func (x *APICreateFeedbackRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APICreateFeedbackRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *APICreateFeedbackRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *APICreateFeedbackRequest) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

type DeleteFromTrafficWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *DeleteFromTrafficWhitelistRequest) Reset() {
	*x = DeleteFromTrafficWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFromTrafficWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromTrafficWhitelistRequest) ProtoMessage() {}

func (x *DeleteFromTrafficWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromTrafficWhitelistRequest.ProtoReflect.Descriptor instead.
func (*DeleteFromTrafficWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteFromTrafficWhitelistRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type DeleteFromTrafficBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *DeleteFromTrafficBlacklistRequest) Reset() {
	*x = DeleteFromTrafficBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFromTrafficBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromTrafficBlacklistRequest) ProtoMessage() {}

func (x *DeleteFromTrafficBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromTrafficBlacklistRequest.ProtoReflect.Descriptor instead.
func (*DeleteFromTrafficBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteFromTrafficBlacklistRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type AddToTrafficBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip     string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Period int32  `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AddToTrafficBlacklistRequest) Reset() {
	*x = AddToTrafficBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToTrafficBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToTrafficBlacklistRequest) ProtoMessage() {}

func (x *AddToTrafficBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToTrafficBlacklistRequest.ProtoReflect.Descriptor instead.
func (*AddToTrafficBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{40}
}

func (x *AddToTrafficBlacklistRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AddToTrafficBlacklistRequest) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *AddToTrafficBlacklistRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AddToTrafficWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *AddToTrafficWhitelistRequest) Reset() {
	*x = AddToTrafficWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToTrafficWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToTrafficWhitelistRequest) ProtoMessage() {}

func (x *AddToTrafficWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToTrafficWhitelistRequest.ProtoReflect.Descriptor instead.
func (*AddToTrafficWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{41}
}

func (x *AddToTrafficWhitelistRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type APITrafficWhitelistItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip          string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *APITrafficWhitelistItem) Reset() {
	*x = APITrafficWhitelistItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITrafficWhitelistItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITrafficWhitelistItem) ProtoMessage() {}

func (x *APITrafficWhitelistItem) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITrafficWhitelistItem.ProtoReflect.Descriptor instead.
func (*APITrafficWhitelistItem) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{42}
}

func (x *APITrafficWhitelistItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *APITrafficWhitelistItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type APITrafficWhitelistItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*APITrafficWhitelistItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *APITrafficWhitelistItems) Reset() {
	*x = APITrafficWhitelistItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITrafficWhitelistItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITrafficWhitelistItems) ProtoMessage() {}

func (x *APITrafficWhitelistItems) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITrafficWhitelistItems.ProtoReflect.Descriptor instead.
func (*APITrafficWhitelistItems) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{43}
}

func (x *APITrafficWhitelistItems) GetItems() []*APITrafficWhitelistItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type APIForumsUserSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionsCount int32 `protobuf:"varint,1,opt,name=subscriptionsCount,proto3" json:"subscriptionsCount,omitempty"`
}

func (x *APIForumsUserSummary) Reset() {
	*x = APIForumsUserSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIForumsUserSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIForumsUserSummary) ProtoMessage() {}

func (x *APIForumsUserSummary) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIForumsUserSummary.ProtoReflect.Descriptor instead.
func (*APIForumsUserSummary) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{44}
}

func (x *APIForumsUserSummary) GetSubscriptionsCount() int32 {
	if x != nil {
		return x.SubscriptionsCount
	}
	return 0
}

type APICreateTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThemeId            int64  `protobuf:"varint,1,opt,name=theme_id,json=themeId,proto3" json:"theme_id,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Message            string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ModeratorAttention bool   `protobuf:"varint,4,opt,name=moderator_attention,json=moderatorAttention,proto3" json:"moderator_attention,omitempty"`
	Subscription       bool   `protobuf:"varint,5,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *APICreateTopicRequest) Reset() {
	*x = APICreateTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APICreateTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APICreateTopicRequest) ProtoMessage() {}

func (x *APICreateTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APICreateTopicRequest.ProtoReflect.Descriptor instead.
func (*APICreateTopicRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{45}
}

func (x *APICreateTopicRequest) GetThemeId() int64 {
	if x != nil {
		return x.ThemeId
	}
	return 0
}

func (x *APICreateTopicRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APICreateTopicRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *APICreateTopicRequest) GetModeratorAttention() bool {
	if x != nil {
		return x.ModeratorAttention
	}
	return false
}

func (x *APICreateTopicRequest) GetSubscription() bool {
	if x != nil {
		return x.Subscription
	}
	return false
}

type APICreateTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *APICreateTopicResponse) Reset() {
	*x = APICreateTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APICreateTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APICreateTopicResponse) ProtoMessage() {}

func (x *APICreateTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APICreateTopicResponse.ProtoReflect.Descriptor instead.
func (*APICreateTopicResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{46}
}

func (x *APICreateTopicResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type APISetTopicStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *APISetTopicStatusRequest) Reset() {
	*x = APISetTopicStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APISetTopicStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APISetTopicStatusRequest) ProtoMessage() {}

func (x *APISetTopicStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APISetTopicStatusRequest.ProtoReflect.Descriptor instead.
func (*APISetTopicStatusRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{47}
}

func (x *APISetTopicStatusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type APIMoveTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ThemeId int64 `protobuf:"varint,2,opt,name=theme_id,json=themeId,proto3" json:"theme_id,omitempty"`
}

func (x *APIMoveTopicRequest) Reset() {
	*x = APIMoveTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIMoveTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIMoveTopicRequest) ProtoMessage() {}

func (x *APIMoveTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIMoveTopicRequest.ProtoReflect.Descriptor instead.
func (*APIMoveTopicRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{48}
}

func (x *APIMoveTopicRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APIMoveTopicRequest) GetThemeId() int64 {
	if x != nil {
		return x.ThemeId
	}
	return 0
}

type APIMessageNewCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *APIMessageNewCount) Reset() {
	*x = APIMessageNewCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIMessageNewCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIMessageNewCount) ProtoMessage() {}

func (x *APIMessageNewCount) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIMessageNewCount.ProtoReflect.Descriptor instead.
func (*APIMessageNewCount) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{49}
}

func (x *APIMessageNewCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type APIMessageSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InboxCount     int32 `protobuf:"varint,1,opt,name=inbox_count,json=inboxCount,proto3" json:"inbox_count,omitempty"`
	InboxNewCount  int32 `protobuf:"varint,2,opt,name=inbox_new_count,json=inboxNewCount,proto3" json:"inbox_new_count,omitempty"`
	SentCount      int32 `protobuf:"varint,3,opt,name=sent_count,json=sentCount,proto3" json:"sent_count,omitempty"`
	SystemCount    int32 `protobuf:"varint,4,opt,name=system_count,json=systemCount,proto3" json:"system_count,omitempty"`
	SystemNewCount int32 `protobuf:"varint,5,opt,name=system_new_count,json=systemNewCount,proto3" json:"system_new_count,omitempty"`
}

func (x *APIMessageSummary) Reset() {
	*x = APIMessageSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIMessageSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIMessageSummary) ProtoMessage() {}

func (x *APIMessageSummary) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIMessageSummary.ProtoReflect.Descriptor instead.
func (*APIMessageSummary) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{50}
}

func (x *APIMessageSummary) GetInboxCount() int32 {
	if x != nil {
		return x.InboxCount
	}
	return 0
}

func (x *APIMessageSummary) GetInboxNewCount() int32 {
	if x != nil {
		return x.InboxNewCount
	}
	return 0
}

func (x *APIMessageSummary) GetSentCount() int32 {
	if x != nil {
		return x.SentCount
	}
	return 0
}

func (x *APIMessageSummary) GetSystemCount() int32 {
	if x != nil {
		return x.SystemCount
	}
	return 0
}

func (x *APIMessageSummary) GetSystemNewCount() int32 {
	if x != nil {
		return x.SystemNewCount
	}
	return 0
}

type APIDeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *APIDeleteUserRequest) Reset() {
	*x = APIDeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIDeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIDeleteUserRequest) ProtoMessage() {}

func (x *APIDeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIDeleteUserRequest.ProtoReflect.Descriptor instead.
func (*APIDeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{51}
}

func (x *APIDeleteUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *APIDeleteUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type APIMeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *APIMeRequest) Reset() {
	*x = APIMeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIMeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIMeRequest) ProtoMessage() {}

func (x *APIMeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIMeRequest.ProtoReflect.Descriptor instead.
func (*APIMeRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{52}
}

func (x *APIMeRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type APIGetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *APIGetUserRequest) Reset() {
	*x = APIGetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIGetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIGetUserRequest) ProtoMessage() {}

func (x *APIGetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIGetUserRequest.ProtoReflect.Descriptor instead.
func (*APIGetUserRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{53}
}

func (x *APIGetUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *APIGetUserRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type GetTopBrandsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetTopBrandsListRequest) Reset() {
	*x = GetTopBrandsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopBrandsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopBrandsListRequest) ProtoMessage() {}

func (x *GetTopBrandsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopBrandsListRequest.ProtoReflect.Descriptor instead.
func (*GetTopBrandsListRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{54}
}

func (x *GetTopBrandsListRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type APITopBrandsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brands []*APITopBrandsListItem `protobuf:"bytes,1,rep,name=brands,proto3" json:"brands,omitempty"`
	Total  int32                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *APITopBrandsList) Reset() {
	*x = APITopBrandsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITopBrandsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITopBrandsList) ProtoMessage() {}

func (x *APITopBrandsList) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITopBrandsList.ProtoReflect.Descriptor instead.
func (*APITopBrandsList) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{55}
}

func (x *APITopBrandsList) GetBrands() []*APITopBrandsListItem {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *APITopBrandsList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type APITopBrandsListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Catname       string `protobuf:"bytes,2,opt,name=catname,proto3" json:"catname,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ItemsCount    int32  `protobuf:"varint,4,opt,name=items_count,json=itemsCount,proto3" json:"items_count,omitempty"`
	NewItemsCount int32  `protobuf:"varint,5,opt,name=new_items_count,json=newItemsCount,proto3" json:"new_items_count,omitempty"`
}

func (x *APITopBrandsListItem) Reset() {
	*x = APITopBrandsListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITopBrandsListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITopBrandsListItem) ProtoMessage() {}

func (x *APITopBrandsListItem) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITopBrandsListItem.ProtoReflect.Descriptor instead.
func (*APITopBrandsListItem) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{56}
}

func (x *APITopBrandsListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APITopBrandsListItem) GetCatname() string {
	if x != nil {
		return x.Catname
	}
	return ""
}

func (x *APITopBrandsListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APITopBrandsListItem) GetItemsCount() int32 {
	if x != nil {
		return x.ItemsCount
	}
	return 0
}

func (x *APITopBrandsListItem) GetNewItemsCount() int32 {
	if x != nil {
		return x.NewItemsCount
	}
	return 0
}

type GetTopPersonsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language        string          `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	PictureItemType PictureItemType `protobuf:"varint,2,opt,name=picture_item_type,json=pictureItemType,proto3,enum=goautowp.PictureItemType" json:"picture_item_type,omitempty"`
}

func (x *GetTopPersonsListRequest) Reset() {
	*x = GetTopPersonsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopPersonsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopPersonsListRequest) ProtoMessage() {}

func (x *GetTopPersonsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopPersonsListRequest.ProtoReflect.Descriptor instead.
func (*GetTopPersonsListRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{57}
}

func (x *GetTopPersonsListRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetTopPersonsListRequest) GetPictureItemType() PictureItemType {
	if x != nil {
		return x.PictureItemType
	}
	return PictureItemType_PICTURE_UNKNOWN
}

type GetTopTwinsBrandsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetTopTwinsBrandsListRequest) Reset() {
	*x = GetTopTwinsBrandsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopTwinsBrandsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopTwinsBrandsListRequest) ProtoMessage() {}

func (x *GetTopTwinsBrandsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopTwinsBrandsListRequest.ProtoReflect.Descriptor instead.
func (*GetTopTwinsBrandsListRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{58}
}

func (x *GetTopTwinsBrandsListRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetTopCategoriesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetTopCategoriesListRequest) Reset() {
	*x = GetTopCategoriesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopCategoriesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopCategoriesListRequest) ProtoMessage() {}

func (x *GetTopCategoriesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopCategoriesListRequest.ProtoReflect.Descriptor instead.
func (*GetTopCategoriesListRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{59}
}

func (x *GetTopCategoriesListRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetTopFactoriesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetTopFactoriesListRequest) Reset() {
	*x = GetTopFactoriesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopFactoriesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopFactoriesListRequest) ProtoMessage() {}

func (x *GetTopFactoriesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopFactoriesListRequest.ProtoReflect.Descriptor instead.
func (*GetTopFactoriesListRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{60}
}

func (x *GetTopFactoriesListRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type APITopPersonsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*APITopPersonsListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *APITopPersonsList) Reset() {
	*x = APITopPersonsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITopPersonsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITopPersonsList) ProtoMessage() {}

func (x *APITopPersonsList) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITopPersonsList.ProtoReflect.Descriptor instead.
func (*APITopPersonsList) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{61}
}

func (x *APITopPersonsList) GetItems() []*APITopPersonsListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type APITopPersonsListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *APITopPersonsListItem) Reset() {
	*x = APITopPersonsListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITopPersonsListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITopPersonsListItem) ProtoMessage() {}

func (x *APITopPersonsListItem) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITopPersonsListItem.ProtoReflect.Descriptor instead.
func (*APITopPersonsListItem) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{62}
}

func (x *APITopPersonsListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APITopPersonsListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type APITopTwinsBrandsListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Catname  string `protobuf:"bytes,3,opt,name=catname,proto3" json:"catname,omitempty"`
	Count    int32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	NewCount int32  `protobuf:"varint,5,opt,name=new_count,json=newCount,proto3" json:"new_count,omitempty"`
}

func (x *APITopTwinsBrandsListItem) Reset() {
	*x = APITopTwinsBrandsListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITopTwinsBrandsListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITopTwinsBrandsListItem) ProtoMessage() {}

func (x *APITopTwinsBrandsListItem) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITopTwinsBrandsListItem.ProtoReflect.Descriptor instead.
func (*APITopTwinsBrandsListItem) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{63}
}

func (x *APITopTwinsBrandsListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APITopTwinsBrandsListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APITopTwinsBrandsListItem) GetCatname() string {
	if x != nil {
		return x.Catname
	}
	return ""
}

func (x *APITopTwinsBrandsListItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *APITopTwinsBrandsListItem) GetNewCount() int32 {
	if x != nil {
		return x.NewCount
	}
	return 0
}

type APITopTwinsBrandsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*APITopTwinsBrandsListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Count int32                        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *APITopTwinsBrandsList) Reset() {
	*x = APITopTwinsBrandsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITopTwinsBrandsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITopTwinsBrandsList) ProtoMessage() {}

func (x *APITopTwinsBrandsList) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITopTwinsBrandsList.ProtoReflect.Descriptor instead.
func (*APITopTwinsBrandsList) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{64}
}

func (x *APITopTwinsBrandsList) GetItems() []*APITopTwinsBrandsListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *APITopTwinsBrandsList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type APITopCategoriesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*APITopCategoriesListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *APITopCategoriesList) Reset() {
	*x = APITopCategoriesList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITopCategoriesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITopCategoriesList) ProtoMessage() {}

func (x *APITopCategoriesList) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITopCategoriesList.ProtoReflect.Descriptor instead.
func (*APITopCategoriesList) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{65}
}

func (x *APITopCategoriesList) GetItems() []*APITopCategoriesListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type APITopCategoriesListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Catname  string `protobuf:"bytes,3,opt,name=catname,proto3" json:"catname,omitempty"`
	Count    int32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	NewCount int32  `protobuf:"varint,5,opt,name=new_count,json=newCount,proto3" json:"new_count,omitempty"`
}

func (x *APITopCategoriesListItem) Reset() {
	*x = APITopCategoriesListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITopCategoriesListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITopCategoriesListItem) ProtoMessage() {}

func (x *APITopCategoriesListItem) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITopCategoriesListItem.ProtoReflect.Descriptor instead.
func (*APITopCategoriesListItem) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{66}
}

func (x *APITopCategoriesListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APITopCategoriesListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APITopCategoriesListItem) GetCatname() string {
	if x != nil {
		return x.Catname
	}
	return ""
}

func (x *APITopCategoriesListItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *APITopCategoriesListItem) GetNewCount() int32 {
	if x != nil {
		return x.NewCount
	}
	return 0
}

type APITopFactoriesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*APITopFactoriesListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *APITopFactoriesList) Reset() {
	*x = APITopFactoriesList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITopFactoriesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITopFactoriesList) ProtoMessage() {}

func (x *APITopFactoriesList) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITopFactoriesList.ProtoReflect.Descriptor instead.
func (*APITopFactoriesList) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{67}
}

func (x *APITopFactoriesList) GetItems() []*APITopFactoriesListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type APITopFactoriesListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Count    int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	NewCount int32  `protobuf:"varint,4,opt,name=new_count,json=newCount,proto3" json:"new_count,omitempty"`
}

func (x *APITopFactoriesListItem) Reset() {
	*x = APITopFactoriesListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITopFactoriesListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITopFactoriesListItem) ProtoMessage() {}

func (x *APITopFactoriesListItem) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITopFactoriesListItem.ProtoReflect.Descriptor instead.
func (*APITopFactoriesListItem) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{68}
}

func (x *APITopFactoriesListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APITopFactoriesListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APITopFactoriesListItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *APITopFactoriesListItem) GetNewCount() int32 {
	if x != nil {
		return x.NewCount
	}
	return 0
}

type ItemPicturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId        ItemPictureType  `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3,enum=goautowp.ItemPictureType" json:"type_id,omitempty"`
	Pictures      *PicturesRequest `protobuf:"bytes,2,opt,name=pictures,proto3" json:"pictures,omitempty"`
	PerspectiveId int32            `protobuf:"varint,3,opt,name=perspective_id,json=perspectiveId,proto3" json:"perspective_id,omitempty"`
}

func (x *ItemPicturesRequest) Reset() {
	*x = ItemPicturesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemPicturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemPicturesRequest) ProtoMessage() {}

func (x *ItemPicturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemPicturesRequest.ProtoReflect.Descriptor instead.
func (*ItemPicturesRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{69}
}

func (x *ItemPicturesRequest) GetTypeId() ItemPictureType {
	if x != nil {
		return x.TypeId
	}
	return ItemPictureType_ITEM_PICTURE_UNKNOWN
}

func (x *ItemPicturesRequest) GetPictures() *PicturesRequest {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *ItemPicturesRequest) GetPerspectiveId() int32 {
	if x != nil {
		return x.PerspectiveId
	}
	return 0
}

type PicturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      PictureStatus        `protobuf:"varint,1,opt,name=status,proto3,enum=goautowp.PictureStatus" json:"status,omitempty"`
	ItemPicture *ItemPicturesRequest `protobuf:"bytes,2,opt,name=item_picture,json=itemPicture,proto3" json:"item_picture,omitempty"`
}

func (x *PicturesRequest) Reset() {
	*x = PicturesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PicturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PicturesRequest) ProtoMessage() {}

func (x *PicturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PicturesRequest.ProtoReflect.Descriptor instead.
func (*PicturesRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{70}
}

func (x *PicturesRequest) GetStatus() PictureStatus {
	if x != nil {
		return x.Status
	}
	return PictureStatus_PICTURE_STATUS_UNKNOWN
}

func (x *PicturesRequest) GetItemPicture() *ItemPicturesRequest {
	if x != nil {
		return x.ItemPicture
	}
	return nil
}

type PictureFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameText bool `protobuf:"varint,1,opt,name=name_text,json=nameText,proto3" json:"name_text,omitempty"`
}

func (x *PictureFields) Reset() {
	*x = PictureFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureFields) ProtoMessage() {}

func (x *PictureFields) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureFields.ProtoReflect.Descriptor instead.
func (*PictureFields) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{71}
}

func (x *PictureFields) GetNameText() bool {
	if x != nil {
		return x.NameText
	}
	return false
}

type PreviewPicturesFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route   bool           `protobuf:"varint,1,opt,name=route,proto3" json:"route,omitempty"`
	Picture *PictureFields `protobuf:"bytes,2,opt,name=picture,proto3" json:"picture,omitempty"`
}

func (x *PreviewPicturesFields) Reset() {
	*x = PreviewPicturesFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewPicturesFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewPicturesFields) ProtoMessage() {}

func (x *PreviewPicturesFields) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewPicturesFields.ProtoReflect.Descriptor instead.
func (*PreviewPicturesFields) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{72}
}

func (x *PreviewPicturesFields) GetRoute() bool {
	if x != nil {
		return x.Route
	}
	return false
}

func (x *PreviewPicturesFields) GetPicture() *PictureFields {
	if x != nil {
		return x.Picture
	}
	return nil
}

type ItemFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameHtml        bool                   `protobuf:"varint,1,opt,name=name_html,json=nameHtml,proto3" json:"name_html,omitempty"`
	NameDefault     bool                   `protobuf:"varint,2,opt,name=name_default,json=nameDefault,proto3" json:"name_default,omitempty"`
	Description     bool                   `protobuf:"varint,3,opt,name=description,proto3" json:"description,omitempty"`
	HasText         bool                   `protobuf:"varint,4,opt,name=has_text,json=hasText,proto3" json:"has_text,omitempty"`
	PreviewPictures *PreviewPicturesFields `protobuf:"bytes,5,opt,name=preview_pictures,json=previewPictures,proto3" json:"preview_pictures,omitempty"`
	TotalPictures   bool                   `protobuf:"varint,6,opt,name=total_pictures,json=totalPictures,proto3" json:"total_pictures,omitempty"`
}

func (x *ItemFields) Reset() {
	*x = ItemFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemFields) ProtoMessage() {}

func (x *ItemFields) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemFields.ProtoReflect.Descriptor instead.
func (*ItemFields) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{73}
}

func (x *ItemFields) GetNameHtml() bool {
	if x != nil {
		return x.NameHtml
	}
	return false
}

func (x *ItemFields) GetNameDefault() bool {
	if x != nil {
		return x.NameDefault
	}
	return false
}

func (x *ItemFields) GetDescription() bool {
	if x != nil {
		return x.Description
	}
	return false
}

func (x *ItemFields) GetHasText() bool {
	if x != nil {
		return x.HasText
	}
	return false
}

func (x *ItemFields) GetPreviewPictures() *PreviewPicturesFields {
	if x != nil {
		return x.PreviewPictures
	}
	return nil
}

func (x *ItemFields) GetTotalPictures() bool {
	if x != nil {
		return x.TotalPictures
	}
	return false
}

type ListItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language           string               `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Fields             *ItemFields          `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	TypeId             ItemType             `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3,enum=goautowp.ItemType" json:"type_id,omitempty"`
	DescendantPictures *ItemPicturesRequest `protobuf:"bytes,4,opt,name=descendant_pictures,json=descendantPictures,proto3" json:"descendant_pictures,omitempty"`
	PreviewPictures    *ItemPicturesRequest `protobuf:"bytes,5,opt,name=preview_pictures,json=previewPictures,proto3" json:"preview_pictures,omitempty"`
	Limit              uint64               `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListItemsRequest) Reset() {
	*x = ListItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItemsRequest) ProtoMessage() {}

func (x *ListItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItemsRequest.ProtoReflect.Descriptor instead.
func (*ListItemsRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{74}
}

func (x *ListItemsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ListItemsRequest) GetFields() *ItemFields {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListItemsRequest) GetTypeId() ItemType {
	if x != nil {
		return x.TypeId
	}
	return ItemType_ITEM_TYPE_UNKNOWN
}

func (x *ListItemsRequest) GetDescendantPictures() *ItemPicturesRequest {
	if x != nil {
		return x.DescendantPictures
	}
	return nil
}

func (x *ListItemsRequest) GetPreviewPictures() *ItemPicturesRequest {
	if x != nil {
		return x.PreviewPictures
	}
	return nil
}

func (x *ListItemsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTreeRequest) Reset() {
	*x = GetTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeRequest) ProtoMessage() {}

func (x *GetTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeRequest.ProtoReflect.Descriptor instead.
func (*GetTreeRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{75}
}

func (x *GetTreeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type APITreeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Childs []*APITreeItem `protobuf:"bytes,3,rep,name=childs,proto3" json:"childs,omitempty"`
	Type   int32          `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *APITreeItem) Reset() {
	*x = APITreeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APITreeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APITreeItem) ProtoMessage() {}

func (x *APITreeItem) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APITreeItem.ProtoReflect.Descriptor instead.
func (*APITreeItem) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{76}
}

func (x *APITreeItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *APITreeItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APITreeItem) GetChilds() []*APITreeItem {
	if x != nil {
		return x.Childs
	}
	return nil
}

func (x *APITreeItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type APIItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Catname string `protobuf:"bytes,2,opt,name=catname,proto3" json:"catname,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *APIItem) Reset() {
	*x = APIItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIItem) ProtoMessage() {}

func (x *APIItem) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIItem.ProtoReflect.Descriptor instead.
func (*APIItem) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{77}
}

func (x *APIItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APIItem) GetCatname() string {
	if x != nil {
		return x.Catname
	}
	return ""
}

func (x *APIItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type APIItemList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*APIItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *APIItemList) Reset() {
	*x = APIItemList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIItemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIItemList) ProtoMessage() {}

func (x *APIItemList) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIItemList.ProtoReflect.Descriptor instead.
func (*APIItemList) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{78}
}

func (x *APIItemList) GetItems() []*APIItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CommentsSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64        `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	TypeId CommentsType `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3,enum=goautowp.CommentsType" json:"type_id,omitempty"`
}

func (x *CommentsSubscribeRequest) Reset() {
	*x = CommentsSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsSubscribeRequest) ProtoMessage() {}

func (x *CommentsSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsSubscribeRequest.ProtoReflect.Descriptor instead.
func (*CommentsSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{79}
}

func (x *CommentsSubscribeRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *CommentsSubscribeRequest) GetTypeId() CommentsType {
	if x != nil {
		return x.TypeId
	}
	return CommentsType_UNKNOWN
}

type CommentsUnSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64        `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	TypeId CommentsType `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3,enum=goautowp.CommentsType" json:"type_id,omitempty"`
}

func (x *CommentsUnSubscribeRequest) Reset() {
	*x = CommentsUnSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsUnSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsUnSubscribeRequest) ProtoMessage() {}

func (x *CommentsUnSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsUnSubscribeRequest.ProtoReflect.Descriptor instead.
func (*CommentsUnSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{80}
}

func (x *CommentsUnSubscribeRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *CommentsUnSubscribeRequest) GetTypeId() CommentsType {
	if x != nil {
		return x.TypeId
	}
	return CommentsType_UNKNOWN
}

type GetCommentVotesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId int64 `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
}

func (x *GetCommentVotesRequest) Reset() {
	*x = GetCommentVotesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentVotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentVotesRequest) ProtoMessage() {}

func (x *GetCommentVotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentVotesRequest.ProtoReflect.Descriptor instead.
func (*GetCommentVotesRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{81}
}

func (x *GetCommentVotesRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type CommentsViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64        `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	TypeId CommentsType `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3,enum=goautowp.CommentsType" json:"type_id,omitempty"`
}

func (x *CommentsViewRequest) Reset() {
	*x = CommentsViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsViewRequest) ProtoMessage() {}

func (x *CommentsViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsViewRequest.ProtoReflect.Descriptor instead.
func (*CommentsViewRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{82}
}

func (x *CommentsViewRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *CommentsViewRequest) GetTypeId() CommentsType {
	if x != nil {
		return x.TypeId
	}
	return CommentsType_UNKNOWN
}

type CommentsSetDeletedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId int64 `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Deleted   bool  `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *CommentsSetDeletedRequest) Reset() {
	*x = CommentsSetDeletedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsSetDeletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsSetDeletedRequest) ProtoMessage() {}

func (x *CommentsSetDeletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsSetDeletedRequest.ProtoReflect.Descriptor instead.
func (*CommentsSetDeletedRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{83}
}

func (x *CommentsSetDeletedRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentsSetDeletedRequest) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type CommentsMoveCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId int64        `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	ItemId    int64        `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	TypeId    CommentsType `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3,enum=goautowp.CommentsType" json:"type_id,omitempty"`
}

func (x *CommentsMoveCommentRequest) Reset() {
	*x = CommentsMoveCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsMoveCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsMoveCommentRequest) ProtoMessage() {}

func (x *CommentsMoveCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsMoveCommentRequest.ProtoReflect.Descriptor instead.
func (*CommentsMoveCommentRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{84}
}

func (x *CommentsMoveCommentRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentsMoveCommentRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *CommentsMoveCommentRequest) GetTypeId() CommentsType {
	if x != nil {
		return x.TypeId
	}
	return CommentsType_UNKNOWN
}

type CommentsVoteCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId int64 `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Vote      int32 `protobuf:"varint,2,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (x *CommentsVoteCommentRequest) Reset() {
	*x = CommentsVoteCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsVoteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsVoteCommentRequest) ProtoMessage() {}

func (x *CommentsVoteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsVoteCommentRequest.ProtoReflect.Descriptor instead.
func (*CommentsVoteCommentRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{85}
}

func (x *CommentsVoteCommentRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentsVoteCommentRequest) GetVote() int32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

type CommentsVoteCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Votes int32 `protobuf:"varint,1,opt,name=votes,proto3" json:"votes,omitempty"`
}

func (x *CommentsVoteCommentResponse) Reset() {
	*x = CommentsVoteCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsVoteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsVoteCommentResponse) ProtoMessage() {}

func (x *CommentsVoteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsVoteCommentResponse.ProtoReflect.Descriptor instead.
func (*CommentsVoteCommentResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{86}
}

func (x *CommentsVoteCommentResponse) GetVotes() int32 {
	if x != nil {
		return x.Votes
	}
	return 0
}

type MapGetPointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointsOnly bool   `protobuf:"varint,1,opt,name=PointsOnly,proto3" json:"PointsOnly,omitempty"`
	Bounds     string `protobuf:"bytes,2,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Language   string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *MapGetPointsRequest) Reset() {
	*x = MapGetPointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapGetPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapGetPointsRequest) ProtoMessage() {}

func (x *MapGetPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapGetPointsRequest.ProtoReflect.Descriptor instead.
func (*MapGetPointsRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{87}
}

func (x *MapGetPointsRequest) GetPointsOnly() bool {
	if x != nil {
		return x.PointsOnly
	}
	return false
}

func (x *MapGetPointsRequest) GetBounds() string {
	if x != nil {
		return x.Bounds
	}
	return ""
}

func (x *MapGetPointsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{88}
}

func (x *Point) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Point) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type MapPoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points []*MapPoint `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *MapPoints) Reset() {
	*x = MapPoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapPoints) ProtoMessage() {}

func (x *MapPoints) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapPoints.ProtoReflect.Descriptor instead.
func (*MapPoints) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{89}
}

func (x *MapPoints) GetPoints() []*MapPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

type MapPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *Point    `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Id       string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name     string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Url      []string  `protobuf:"bytes,4,rep,name=url,proto3" json:"url,omitempty"`
	Image    *APIImage `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *MapPoint) Reset() {
	*x = MapPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapPoint) ProtoMessage() {}

func (x *MapPoint) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapPoint.ProtoReflect.Descriptor instead.
func (*MapPoint) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{90}
}

func (x *MapPoint) GetLocation() *Point {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *MapPoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MapPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MapPoint) GetUrl() []string {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *MapPoint) GetImage() *APIImage {
	if x != nil {
		return x.Image
	}
	return nil
}

type PicturesViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PictureId int64 `protobuf:"varint,1,opt,name=picture_id,json=pictureId,proto3" json:"picture_id,omitempty"`
}

func (x *PicturesViewRequest) Reset() {
	*x = PicturesViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PicturesViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PicturesViewRequest) ProtoMessage() {}

func (x *PicturesViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PicturesViewRequest.ProtoReflect.Descriptor instead.
func (*PicturesViewRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{91}
}

func (x *PicturesViewRequest) GetPictureId() int64 {
	if x != nil {
		return x.PictureId
	}
	return 0
}

type PicturesVoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PictureId int64 `protobuf:"varint,1,opt,name=picture_id,json=pictureId,proto3" json:"picture_id,omitempty"`
	Value     int32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PicturesVoteRequest) Reset() {
	*x = PicturesVoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PicturesVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PicturesVoteRequest) ProtoMessage() {}

func (x *PicturesVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PicturesVoteRequest.ProtoReflect.Descriptor instead.
func (*PicturesVoteRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{92}
}

func (x *PicturesVoteRequest) GetPictureId() int64 {
	if x != nil {
		return x.PictureId
	}
	return 0
}

func (x *PicturesVoteRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PicturesVoteSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Positive int32 `protobuf:"varint,2,opt,name=positive,proto3" json:"positive,omitempty"`
	Negative int32 `protobuf:"varint,3,opt,name=negative,proto3" json:"negative,omitempty"`
}

func (x *PicturesVoteSummary) Reset() {
	*x = PicturesVoteSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PicturesVoteSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PicturesVoteSummary) ProtoMessage() {}

func (x *PicturesVoteSummary) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PicturesVoteSummary.ProtoReflect.Descriptor instead.
func (*PicturesVoteSummary) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{93}
}

func (x *PicturesVoteSummary) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *PicturesVoteSummary) GetPositive() int32 {
	if x != nil {
		return x.Positive
	}
	return 0
}

func (x *PicturesVoteSummary) GetNegative() int32 {
	if x != nil {
		return x.Negative
	}
	return 0
}

type ModerVoteTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID  int64  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Vote    int32  `protobuf:"varint,4,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (x *ModerVoteTemplate) Reset() {
	*x = ModerVoteTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModerVoteTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModerVoteTemplate) ProtoMessage() {}

func (x *ModerVoteTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModerVoteTemplate.ProtoReflect.Descriptor instead.
func (*ModerVoteTemplate) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{94}
}

func (x *ModerVoteTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModerVoteTemplate) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ModerVoteTemplate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ModerVoteTemplate) GetVote() int32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

type ModerVoteTemplates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ModerVoteTemplate `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ModerVoteTemplates) Reset() {
	*x = ModerVoteTemplates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModerVoteTemplates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModerVoteTemplates) ProtoMessage() {}

func (x *ModerVoteTemplates) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModerVoteTemplates.ProtoReflect.Descriptor instead.
func (*ModerVoteTemplates) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{95}
}

func (x *ModerVoteTemplates) GetItems() []*ModerVoteTemplate {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeleteModerVoteTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteModerVoteTemplateRequest) Reset() {
	*x = DeleteModerVoteTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModerVoteTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModerVoteTemplateRequest) ProtoMessage() {}

func (x *DeleteModerVoteTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModerVoteTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteModerVoteTemplateRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{96}
}

func (x *DeleteModerVoteTemplateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MessagingDeleteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId int64 `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *MessagingDeleteMessage) Reset() {
	*x = MessagingDeleteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingDeleteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingDeleteMessage) ProtoMessage() {}

func (x *MessagingDeleteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingDeleteMessage.ProtoReflect.Descriptor instead.
func (*MessagingDeleteMessage) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{97}
}

func (x *MessagingDeleteMessage) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type MessagingClearFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Folder string `protobuf:"bytes,1,opt,name=folder,proto3" json:"folder,omitempty"`
}

func (x *MessagingClearFolder) Reset() {
	*x = MessagingClearFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingClearFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingClearFolder) ProtoMessage() {}

func (x *MessagingClearFolder) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingClearFolder.ProtoReflect.Descriptor instead.
func (*MessagingClearFolder) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{98}
}

func (x *MessagingClearFolder) GetFolder() string {
	if x != nil {
		return x.Folder
	}
	return ""
}

type MessagingCreateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Text   string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *MessagingCreateMessage) Reset() {
	*x = MessagingCreateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingCreateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingCreateMessage) ProtoMessage() {}

func (x *MessagingCreateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingCreateMessage.ProtoReflect.Descriptor instead.
func (*MessagingCreateMessage) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{99}
}

func (x *MessagingCreateMessage) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MessagingCreateMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type APIMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text             string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	IsNew            bool                   `protobuf:"varint,3,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	CanDelete        bool                   `protobuf:"varint,4,opt,name=can_delete,json=canDelete,proto3" json:"can_delete,omitempty"`
	CanReply         bool                   `protobuf:"varint,5,opt,name=can_reply,json=canReply,proto3" json:"can_reply,omitempty"`
	Date             *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	AllMessagesLink  bool                   `protobuf:"varint,7,opt,name=all_messages_link,json=allMessagesLink,proto3" json:"all_messages_link,omitempty"`
	DialogCount      int32                  `protobuf:"varint,8,opt,name=dialog_count,json=dialogCount,proto3" json:"dialog_count,omitempty"`
	AuthorId         int64                  `protobuf:"varint,9,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	ToUserId         int64                  `protobuf:"varint,10,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	DialogWithUserId int64                  `protobuf:"varint,11,opt,name=dialog_with_user_id,json=dialogWithUserId,proto3" json:"dialog_with_user_id,omitempty"`
}

func (x *APIMessage) Reset() {
	*x = APIMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIMessage) ProtoMessage() {}

func (x *APIMessage) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIMessage.ProtoReflect.Descriptor instead.
func (*APIMessage) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{100}
}

func (x *APIMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APIMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *APIMessage) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *APIMessage) GetCanDelete() bool {
	if x != nil {
		return x.CanDelete
	}
	return false
}

func (x *APIMessage) GetCanReply() bool {
	if x != nil {
		return x.CanReply
	}
	return false
}

func (x *APIMessage) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *APIMessage) GetAllMessagesLink() bool {
	if x != nil {
		return x.AllMessagesLink
	}
	return false
}

func (x *APIMessage) GetDialogCount() int32 {
	if x != nil {
		return x.DialogCount
	}
	return 0
}

func (x *APIMessage) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *APIMessage) GetToUserId() int64 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

func (x *APIMessage) GetDialogWithUserId() int64 {
	if x != nil {
		return x.DialogWithUserId
	}
	return 0
}

type MessagingGetMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Folder string `protobuf:"bytes,2,opt,name=folder,proto3" json:"folder,omitempty"`
	Page   int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *MessagingGetMessagesRequest) Reset() {
	*x = MessagingGetMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingGetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingGetMessagesRequest) ProtoMessage() {}

func (x *MessagingGetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingGetMessagesRequest.ProtoReflect.Descriptor instead.
func (*MessagingGetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{101}
}

func (x *MessagingGetMessagesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MessagingGetMessagesRequest) GetFolder() string {
	if x != nil {
		return x.Folder
	}
	return ""
}

func (x *MessagingGetMessagesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type MessagingGetMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []*APIMessage `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Paginator *Pages        `protobuf:"bytes,2,opt,name=paginator,proto3" json:"paginator,omitempty"`
}

func (x *MessagingGetMessagesResponse) Reset() {
	*x = MessagingGetMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagingGetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingGetMessagesResponse) ProtoMessage() {}

func (x *MessagingGetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingGetMessagesResponse.ProtoReflect.Descriptor instead.
func (*MessagingGetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{102}
}

func (x *MessagingGetMessagesResponse) GetItems() []*APIMessage {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MessagingGetMessagesResponse) GetPaginator() *Pages {
	if x != nil {
		return x.Paginator
	}
	return nil
}

type Pages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageCount        int32   `protobuf:"varint,1,opt,name=pageCount,proto3" json:"pageCount,omitempty"`
	First            int32   `protobuf:"varint,2,opt,name=first,proto3" json:"first,omitempty"`
	Current          int32   `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	Next             int32   `protobuf:"varint,5,opt,name=next,proto3" json:"next,omitempty"`
	Previous         int32   `protobuf:"varint,6,opt,name=previous,proto3" json:"previous,omitempty"`
	FirstPageInRange int32   `protobuf:"varint,7,opt,name=firstPageInRange,proto3" json:"firstPageInRange,omitempty"`
	LastPageInRange  int32   `protobuf:"varint,8,opt,name=lastPageInRange,proto3" json:"lastPageInRange,omitempty"`
	PagesInRange     []int32 `protobuf:"varint,9,rep,packed,name=pagesInRange,proto3" json:"pagesInRange,omitempty"`
	TotalItemCount   int32   `protobuf:"varint,10,opt,name=totalItemCount,proto3" json:"totalItemCount,omitempty"`
}

func (x *Pages) Reset() {
	*x = Pages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pages) ProtoMessage() {}

func (x *Pages) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pages.ProtoReflect.Descriptor instead.
func (*Pages) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{103}
}

func (x *Pages) GetPageCount() int32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *Pages) GetFirst() int32 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *Pages) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *Pages) GetNext() int32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *Pages) GetPrevious() int32 {
	if x != nil {
		return x.Previous
	}
	return 0
}

func (x *Pages) GetFirstPageInRange() int32 {
	if x != nil {
		return x.FirstPageInRange
	}
	return 0
}

func (x *Pages) GetLastPageInRange() int32 {
	if x != nil {
		return x.LastPageInRange
	}
	return 0
}

func (x *Pages) GetPagesInRange() []int32 {
	if x != nil {
		return x.PagesInRange
	}
	return nil
}

func (x *Pages) GetTotalItemCount() int32 {
	if x != nil {
		return x.TotalItemCount
	}
	return 0
}

type VODDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dates []*VODDataDate `protobuf:"bytes,1,rep,name=dates,proto3" json:"dates,omitempty"`
	Sum   int32          `protobuf:"varint,2,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *VODDataResponse) Reset() {
	*x = VODDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VODDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VODDataResponse) ProtoMessage() {}

func (x *VODDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VODDataResponse.ProtoReflect.Descriptor instead.
func (*VODDataResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{104}
}

func (x *VODDataResponse) GetDates() []*VODDataDate {
	if x != nil {
		return x.Dates
	}
	return nil
}

func (x *VODDataResponse) GetSum() int32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type VODDataDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Free bool                   `protobuf:"varint,2,opt,name=free,proto3" json:"free,omitempty"`
}

func (x *VODDataDate) Reset() {
	*x = VODDataDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VODDataDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VODDataDate) ProtoMessage() {}

func (x *VODDataDate) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VODDataDate.ProtoReflect.Descriptor instead.
func (*VODDataDate) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{105}
}

func (x *VODDataDate) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *VODDataDate) GetFree() bool {
	if x != nil {
		return x.Free
	}
	return false
}

type AboutDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Developer      string   `protobuf:"bytes,1,opt,name=developer,proto3" json:"developer,omitempty"`
	FrTranslator   string   `protobuf:"bytes,2,opt,name=fr_translator,json=frTranslator,proto3" json:"fr_translator,omitempty"`
	ZhTranslator   string   `protobuf:"bytes,3,opt,name=zh_translator,json=zhTranslator,proto3" json:"zh_translator,omitempty"`
	BeTranslator   string   `protobuf:"bytes,4,opt,name=be_translator,json=beTranslator,proto3" json:"be_translator,omitempty"`
	PtBrTranslator string   `protobuf:"bytes,5,opt,name=pt_br_translator,json=ptBrTranslator,proto3" json:"pt_br_translator,omitempty"`
	Contributors   []string `protobuf:"bytes,6,rep,name=contributors,proto3" json:"contributors,omitempty"`
	TotalPictures  int32    `protobuf:"varint,7,opt,name=total_pictures,json=totalPictures,proto3" json:"total_pictures,omitempty"`
	PicturesSize   int32    `protobuf:"varint,8,opt,name=pictures_size,json=picturesSize,proto3" json:"pictures_size,omitempty"`
	TotalUsers     int32    `protobuf:"varint,9,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	TotalItems     int32    `protobuf:"varint,10,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	TotalComments  int32    `protobuf:"varint,11,opt,name=total_comments,json=totalComments,proto3" json:"total_comments,omitempty"`
}

func (x *AboutDataResponse) Reset() {
	*x = AboutDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AboutDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AboutDataResponse) ProtoMessage() {}

func (x *AboutDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AboutDataResponse.ProtoReflect.Descriptor instead.
func (*AboutDataResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{106}
}

func (x *AboutDataResponse) GetDeveloper() string {
	if x != nil {
		return x.Developer
	}
	return ""
}

func (x *AboutDataResponse) GetFrTranslator() string {
	if x != nil {
		return x.FrTranslator
	}
	return ""
}

func (x *AboutDataResponse) GetZhTranslator() string {
	if x != nil {
		return x.ZhTranslator
	}
	return ""
}

func (x *AboutDataResponse) GetBeTranslator() string {
	if x != nil {
		return x.BeTranslator
	}
	return ""
}

func (x *AboutDataResponse) GetPtBrTranslator() string {
	if x != nil {
		return x.PtBrTranslator
	}
	return ""
}

func (x *AboutDataResponse) GetContributors() []string {
	if x != nil {
		return x.Contributors
	}
	return nil
}

func (x *AboutDataResponse) GetTotalPictures() int32 {
	if x != nil {
		return x.TotalPictures
	}
	return 0
}

func (x *AboutDataResponse) GetPicturesSize() int32 {
	if x != nil {
		return x.PicturesSize
	}
	return 0
}

func (x *AboutDataResponse) GetTotalUsers() int32 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *AboutDataResponse) GetTotalItems() int32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *AboutDataResponse) GetTotalComments() int32 {
	if x != nil {
		return x.TotalComments
	}
	return 0
}

type APIUserPreferencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *APIUserPreferencesRequest) Reset() {
	*x = APIUserPreferencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIUserPreferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIUserPreferencesRequest) ProtoMessage() {}

func (x *APIUserPreferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIUserPreferencesRequest.ProtoReflect.Descriptor instead.
func (*APIUserPreferencesRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{107}
}

func (x *APIUserPreferencesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type APIUserPreferencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableCommentsNotifications bool `protobuf:"varint,1,opt,name=disable_comments_notifications,json=disableCommentsNotifications,proto3" json:"disable_comments_notifications,omitempty"`
}

func (x *APIUserPreferencesResponse) Reset() {
	*x = APIUserPreferencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIUserPreferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIUserPreferencesResponse) ProtoMessage() {}

func (x *APIUserPreferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIUserPreferencesResponse.ProtoReflect.Descriptor instead.
func (*APIUserPreferencesResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{108}
}

func (x *APIUserPreferencesResponse) GetDisableCommentsNotifications() bool {
	if x != nil {
		return x.DisableCommentsNotifications
	}
	return false
}

type ArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ArticlesRequest) Reset() {
	*x = ArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticlesRequest) ProtoMessage() {}

func (x *ArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticlesRequest.ProtoReflect.Descriptor instead.
func (*ArticlesRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{109}
}

func (x *ArticlesRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ArticlesRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ArticlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []*Article `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Paginator *Pages     `protobuf:"bytes,2,opt,name=paginator,proto3" json:"paginator,omitempty"`
}

func (x *ArticlesResponse) Reset() {
	*x = ArticlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticlesResponse) ProtoMessage() {}

func (x *ArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticlesResponse.ProtoReflect.Descriptor instead.
func (*ArticlesResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{110}
}

func (x *ArticlesResponse) GetItems() []*Article {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ArticlesResponse) GetPaginator() *Pages {
	if x != nil {
		return x.Paginator
	}
	return nil
}

type Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AuthorId    int64                  `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Catname     string                 `protobuf:"bytes,4,opt,name=catname,proto3" json:"catname,omitempty"`
	Date        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Html        string                 `protobuf:"bytes,6,opt,name=html,proto3" json:"html,omitempty"`
	PreviewUrl  string                 `protobuf:"bytes,7,opt,name=preview_url,json=previewUrl,proto3" json:"preview_url,omitempty"`
	Description string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Article) Reset() {
	*x = Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{111}
}

func (x *Article) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Article) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Article) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Article) GetCatname() string {
	if x != nil {
		return x.Catname
	}
	return ""
}

func (x *Article) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Article) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *Article) GetPreviewUrl() string {
	if x != nil {
		return x.PreviewUrl
	}
	return ""
}

func (x *Article) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ArticleByCatnameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Catname string `protobuf:"bytes,1,opt,name=catname,proto3" json:"catname,omitempty"`
}

func (x *ArticleByCatnameRequest) Reset() {
	*x = ArticleByCatnameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleByCatnameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleByCatnameRequest) ProtoMessage() {}

func (x *ArticleByCatnameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleByCatnameRequest.ProtoReflect.Descriptor instead.
func (*ArticleByCatnameRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{112}
}

func (x *ArticleByCatnameRequest) GetCatname() string {
	if x != nil {
		return x.Catname
	}
	return ""
}

type APIContentLanguages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Languages []string `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *APIContentLanguages) Reset() {
	*x = APIContentLanguages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIContentLanguages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIContentLanguages) ProtoMessage() {}

func (x *APIContentLanguages) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIContentLanguages.ProtoReflect.Descriptor instead.
func (*APIContentLanguages) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{113}
}

func (x *APIContentLanguages) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

type APIItemLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *APIItemLinkRequest) Reset() {
	*x = APIItemLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIItemLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIItemLinkRequest) ProtoMessage() {}

func (x *APIItemLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIItemLinkRequest.ProtoReflect.Descriptor instead.
func (*APIItemLinkRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{114}
}

func (x *APIItemLinkRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type APIGetItemLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *APIGetItemLinksRequest) Reset() {
	*x = APIGetItemLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIGetItemLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIGetItemLinksRequest) ProtoMessage() {}

func (x *APIGetItemLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIGetItemLinksRequest.ProtoReflect.Descriptor instead.
func (*APIGetItemLinksRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{115}
}

func (x *APIGetItemLinksRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type APIItemLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*APIItemLink `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *APIItemLinksResponse) Reset() {
	*x = APIItemLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIItemLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIItemLinksResponse) ProtoMessage() {}

func (x *APIItemLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIItemLinksResponse.ProtoReflect.Descriptor instead.
func (*APIItemLinksResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{116}
}

func (x *APIItemLinksResponse) GetItems() []*APIItemLink {
	if x != nil {
		return x.Items
	}
	return nil
}

type APIItemLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url    string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Type   string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	ItemId int64  `protobuf:"varint,5,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *APIItemLink) Reset() {
	*x = APIItemLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIItemLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIItemLink) ProtoMessage() {}

func (x *APIItemLink) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIItemLink.ProtoReflect.Descriptor instead.
func (*APIItemLink) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{117}
}

func (x *APIItemLink) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APIItemLink) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APIItemLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *APIItemLink) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *APIItemLink) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type APICreateItemLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *APICreateItemLinkResponse) Reset() {
	*x = APICreateItemLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APICreateItemLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APICreateItemLinkResponse) ProtoMessage() {}

func (x *APICreateItemLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APICreateItemLinkResponse.ProtoReflect.Descriptor instead.
func (*APICreateItemLinkResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{118}
}

func (x *APICreateItemLinkResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type APIGetItemVehicleTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId        int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	VehicleTypeId int64 `protobuf:"varint,2,opt,name=vehicle_type_id,json=vehicleTypeId,proto3" json:"vehicle_type_id,omitempty"`
}

func (x *APIGetItemVehicleTypesRequest) Reset() {
	*x = APIGetItemVehicleTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIGetItemVehicleTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIGetItemVehicleTypesRequest) ProtoMessage() {}

func (x *APIGetItemVehicleTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIGetItemVehicleTypesRequest.ProtoReflect.Descriptor instead.
func (*APIGetItemVehicleTypesRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{119}
}

func (x *APIGetItemVehicleTypesRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *APIGetItemVehicleTypesRequest) GetVehicleTypeId() int64 {
	if x != nil {
		return x.VehicleTypeId
	}
	return 0
}

type APIItemVehicleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId        int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	VehicleTypeId int64 `protobuf:"varint,2,opt,name=vehicle_type_id,json=vehicleTypeId,proto3" json:"vehicle_type_id,omitempty"`
}

func (x *APIItemVehicleType) Reset() {
	*x = APIItemVehicleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIItemVehicleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIItemVehicleType) ProtoMessage() {}

func (x *APIItemVehicleType) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIItemVehicleType.ProtoReflect.Descriptor instead.
func (*APIItemVehicleType) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{120}
}

func (x *APIItemVehicleType) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *APIItemVehicleType) GetVehicleTypeId() int64 {
	if x != nil {
		return x.VehicleTypeId
	}
	return 0
}

type APIGetItemVehicleTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*APIItemVehicleType `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *APIGetItemVehicleTypesResponse) Reset() {
	*x = APIGetItemVehicleTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIGetItemVehicleTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIGetItemVehicleTypesResponse) ProtoMessage() {}

func (x *APIGetItemVehicleTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIGetItemVehicleTypesResponse.ProtoReflect.Descriptor instead.
func (*APIGetItemVehicleTypesResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{121}
}

func (x *APIGetItemVehicleTypesResponse) GetItems() []*APIItemVehicleType {
	if x != nil {
		return x.Items
	}
	return nil
}

type APIItemVehicleTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId        int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	VehicleTypeId int64 `protobuf:"varint,2,opt,name=vehicle_type_id,json=vehicleTypeId,proto3" json:"vehicle_type_id,omitempty"`
}

func (x *APIItemVehicleTypeRequest) Reset() {
	*x = APIItemVehicleTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIItemVehicleTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIItemVehicleTypeRequest) ProtoMessage() {}

func (x *APIItemVehicleTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIItemVehicleTypeRequest.ProtoReflect.Descriptor instead.
func (*APIItemVehicleTypeRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{122}
}

func (x *APIItemVehicleTypeRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *APIItemVehicleTypeRequest) GetVehicleTypeId() int64 {
	if x != nil {
		return x.VehicleTypeId
	}
	return 0
}

type AddCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId             int64        `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	TypeId             CommentsType `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3,enum=goautowp.CommentsType" json:"type_id,omitempty"`
	Message            string       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ModeratorAttention bool         `protobuf:"varint,4,opt,name=moderator_attention,json=moderatorAttention,proto3" json:"moderator_attention,omitempty"`
	ParentId           int64        `protobuf:"varint,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Resolve            bool         `protobuf:"varint,6,opt,name=resolve,proto3" json:"resolve,omitempty"`
}

func (x *AddCommentRequest) Reset() {
	*x = AddCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentRequest) ProtoMessage() {}

func (x *AddCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentRequest.ProtoReflect.Descriptor instead.
func (*AddCommentRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{123}
}

func (x *AddCommentRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AddCommentRequest) GetTypeId() CommentsType {
	if x != nil {
		return x.TypeId
	}
	return CommentsType_UNKNOWN
}

func (x *AddCommentRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddCommentRequest) GetModeratorAttention() bool {
	if x != nil {
		return x.ModeratorAttention
	}
	return false
}

func (x *AddCommentRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddCommentRequest) GetResolve() bool {
	if x != nil {
		return x.Resolve
	}
	return false
}

type AddCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddCommentResponse) Reset() {
	*x = AddCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentResponse) ProtoMessage() {}

func (x *AddCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentResponse.ProtoReflect.Descriptor instead.
func (*AddCommentResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{124}
}

func (x *AddCommentResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type APIGetTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Revision int64 `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *APIGetTextRequest) Reset() {
	*x = APIGetTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIGetTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIGetTextRequest) ProtoMessage() {}

func (x *APIGetTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIGetTextRequest.ProtoReflect.Descriptor instead.
func (*APIGetTextRequest) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{125}
}

func (x *APIGetTextRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APIGetTextRequest) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

type TextRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Revision int64  `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	UserId   int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TextRevision) Reset() {
	*x = TextRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextRevision) ProtoMessage() {}

func (x *TextRevision) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextRevision.ProtoReflect.Descriptor instead.
func (*TextRevision) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{126}
}

func (x *TextRevision) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextRevision) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *TextRevision) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type APIGetTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current *TextRevision `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Prev    *TextRevision `protobuf:"bytes,2,opt,name=prev,proto3" json:"prev,omitempty"`
	Next    *TextRevision `protobuf:"bytes,3,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *APIGetTextResponse) Reset() {
	*x = APIGetTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIGetTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIGetTextResponse) ProtoMessage() {}

func (x *APIGetTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIGetTextResponse.ProtoReflect.Descriptor instead.
func (*APIGetTextResponse) Descriptor() ([]byte, []int) {
	return file_spec_proto_rawDescGZIP(), []int{127}
}

func (x *APIGetTextResponse) GetCurrent() *TextRevision {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *APIGetTextResponse) GetPrev() *TextRevision {
	if x != nil {
		return x.Prev
	}
	return nil
}

func (x *APIGetTextResponse) GetNext() *TextRevision {
	if x != nil {
		return x.Next
	}
	return nil
}

var File_spec_proto protoreflect.FileDescriptor

var file_spec_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63,
	0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x03, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x09, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3c, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52,
	0x0c, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x51, 0x0a,
	0x13, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x13, 0x70, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x62, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48,
	0x65, 0x6c, 0x70, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x12, 0x48, 0x0a, 0x10, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x71, 0x0a, 0x0c, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50,
	0x75, 0x6c, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x2a, 0x0a, 0x06, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x45, 0x41, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d,
	0x4f, 0x4e, 0x54, 0x48, 0x10, 0x02, 0x22, 0x4e, 0x0a, 0x09, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x47,
	0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x02, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4c,
	0x65, 0x67, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x7f, 0x0a, 0x0d, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x67, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50,
	0x75, 0x6c, 0x73, 0x65, 0x47, 0x72, 0x69, 0x64, 0x52, 0x04, 0x67, 0x72, 0x69, 0x64, 0x12, 0x2d,
	0x0a, 0x06, 0x6c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4c,
	0x65, 0x67, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x6c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x71, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x22, 0x32, 0x0a, 0x0a, 0x53, 0x70, 0x65, 0x63,
	0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x31, 0x0a, 0x0b,
	0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x40, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x71, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x65, 0x72,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22,
	0x48, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x30, 0x0a, 0x0f, 0x52, 0x65, 0x43,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x34, 0x0a, 0x0a, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73,
	0x73, 0x22, 0x4d, 0x0a, 0x11, 0x41, 0x63, 0x6c, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x22, 0x2a, 0x0a, 0x10, 0x41, 0x63, 0x6c, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x60, 0x0a, 0x0b,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x22, 0x3f,
	0x0a, 0x10, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x38, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x15, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x71, 0x0a, 0x10, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x08, 0x41, 0x50, 0x49, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0xd4, 0x02, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x6f,
	0x6e, 0x67, 0x41, 0x77, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2a,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x73, 0x5f, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x73,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x58, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0x37, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x3f, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x61,
	0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x08, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x10, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x45, 0x47, 0x41, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x22, 0xa0, 0x01, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x42, 0x61, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x0a, 0x62, 0x79, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70,
	0x2e, 0x41, 0x50, 0x49, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x62, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x41, 0x50, 0x49,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x54, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x03, 0x62, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49,
	0x42, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03, 0x62, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x6e, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x55, 0x72, 0x6c, 0x22, 0x4a, 0x0a, 0x15,
	0x41, 0x50, 0x49, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e,
	0x41, 0x50, 0x49, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x54, 0x6f, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x39, 0x0a, 0x0f, 0x41, 0x50, 0x49, 0x47,
	0x65, 0x74, 0x49, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x22, 0x6b, 0x0a, 0x0b, 0x41, 0x50, 0x49, 0x49, 0x50, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x64,
	0x64, 0x54, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xa0, 0x01, 0x0a, 0x05, 0x41, 0x50, 0x49, 0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x32, 0x0a, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41,
	0x50, 0x49, 0x42, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e,
	0x41, 0x50, 0x49, 0x49, 0x50, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x06, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x22, 0x78, 0x0a, 0x18, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x22, 0x33, 0x0a,
	0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x22, 0x33, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x5e, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x54, 0x6f,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x54, 0x6f,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x4b, 0x0a, 0x17, 0x41, 0x50, 0x49, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x18, 0x41, 0x50, 0x49, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x14, 0x41, 0x50, 0x49,
	0x46, 0x6f, 0x72, 0x75, 0x6d, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xb5, 0x01, 0x0a, 0x15, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x16, 0x41, 0x50, 0x49,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x40, 0x0a, 0x13, 0x41, 0x50, 0x49, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x49,
	0x64, 0x22, 0x2a, 0x0a, 0x12, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e,
	0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc8, 0x01,
	0x0a, 0x11, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x6e, 0x65,
	0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69,
	0x6e, 0x62, 0x6f, 0x78, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x14, 0x41, 0x50, 0x49, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x44, 0x0a,
	0x11, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x10, 0x41, 0x50,
	0x49, 0x54, 0x6f, 0x70, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9d, 0x01, 0x0a,
	0x14, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e,
	0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7d, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x11, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x22, 0x38, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x11,
	0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x54,
	0x6f, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3b, 0x0a, 0x15, 0x41, 0x50, 0x49, 0x54,
	0x6f, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70,
	0x54, 0x77, 0x69, 0x6e, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x15, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x54, 0x77,
	0x69, 0x6e, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67,
	0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x54, 0x77,
	0x69, 0x6e, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x50,
	0x0a, 0x14, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70,
	0x2e, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x8b, 0x01, 0x0a, 0x18, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4e,
	0x0a, 0x13, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e,
	0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x70,
	0x0a, 0x17, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xa7, 0x01, 0x0a, 0x13, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x61, 0x75,
	0x74, 0x6f, 0x77, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x65, 0x72,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x0f, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x40, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x2c, 0x0a, 0x0d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22,
	0x60, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x31,
	0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x22, 0xfc, 0x01, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x4a, 0x0a,
	0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x22, 0xb9, 0x02, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x2b, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x13,
	0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75,
	0x74, 0x6f, 0x77, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x10,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77,
	0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x20, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x74,
	0x0a, 0x0b, 0x41, 0x50, 0x49, 0x54, 0x72, 0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49,
	0x54, 0x72, 0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x47, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a,
	0x0b, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x64, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1a, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x13,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x54, 0x0a,
	0x19, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x1a, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x33, 0x0a, 0x1b,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65,
	0x73, 0x22, 0x69, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x2b, 0x0a, 0x05,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x22, 0x37, 0x0a, 0x09, 0x4d, 0x61, 0x70,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77,
	0x70, 0x2e, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x2b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x13,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x49, 0x64, 0x22, 0x4a, 0x0a, 0x13, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x63,
	0x0a, 0x13, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x22, 0x69, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x47,
	0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x16, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x22, 0x45, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xec, 0x02, 0x0a, 0x0a, 0x41, 0x50,
	0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x4e, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74,
	0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x64, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x57, 0x69,
	0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x1c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xa7, 0x02, 0x0a, 0x05, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6e,
	0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12,
	0x2a, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x49, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x50, 0x0a, 0x0f, 0x56, 0x4f, 0x44, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x56,
	0x4f, 0x44, 0x44, 0x61, 0x74, 0x61, 0x44, 0x61, 0x74, 0x65, 0x52, 0x05, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x73, 0x75, 0x6d, 0x22, 0x51, 0x0a, 0x0b, 0x56, 0x4f, 0x44, 0x44, 0x61, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x22, 0xa3, 0x03, 0x0a, 0x11, 0x41, 0x62, 0x6f, 0x75, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x7a, 0x68, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x7a, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x74, 0x5f,
	0x62, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x42, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x34, 0x0a, 0x19,
	0x41, 0x50, 0x49, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x62, 0x0a, 0x1a, 0x41, 0x50, 0x49, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x1e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x10, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77,
	0x70, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x2d, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0xeb, 0x01, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a,
	0x17, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x33, 0x0a, 0x13, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x41, 0x50, 0x49, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a,
	0x16, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x22, 0x43, 0x0a, 0x14, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x70, 0x0a, 0x0b, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x19, 0x41, 0x50, 0x49, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x1d, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x12, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65,
	0x6d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x54, 0x0a,
	0x1e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65,
	0x6d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x5c, 0x0a, 0x19, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x22, 0xdf, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x6d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x11, 0x41, 0x50, 0x49,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x0c, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04,
	0x70, 0x72, 0x65, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61,
	0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76, 0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77,
	0x70, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x2a, 0x67, 0x0a, 0x0f, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x49, 0x43, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x43, 0x4f, 0x50, 0x59, 0x52, 0x49, 0x47, 0x48, 0x54, 0x53, 0x10, 0x03, 0x2a, 0xec, 0x01,
	0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x54,
	0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56,
	0x45, 0x48, 0x49, 0x43, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x16,
	0x0a, 0x12, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45,
	0x47, 0x4f, 0x52, 0x59, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x57, 0x49, 0x4e, 0x53, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x52, 0x41, 0x4e, 0x44, 0x10, 0x05,
	0x12, 0x15, 0x0a, 0x11, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41,
	0x43, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x54, 0x45, 0x4d, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x55, 0x53, 0x45, 0x55, 0x4d, 0x10, 0x07, 0x12, 0x14, 0x0a,
	0x10, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f,
	0x4e, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x4f, 0x50, 0x59, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x09, 0x2a, 0x9b, 0x01, 0x0a,
	0x0d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x16, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x49,
	0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x43,
	0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x49, 0x43, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x18, 0x0a, 0x14, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x58, 0x10, 0x04, 0x2a, 0x7b, 0x0a, 0x0f, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x14, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x54, 0x45, 0x4d, 0x5f,
	0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x54,
	0x45, 0x4d, 0x5f, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x50, 0x59, 0x52,
	0x49, 0x47, 0x48, 0x54, 0x53, 0x10, 0x03, 0x2a, 0x82, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45,
	0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x56, 0x4f, 0x54, 0x49, 0x4e, 0x47, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44,
	0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x53, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x4f, 0x52, 0x55,
	0x4d, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x05, 0x32, 0xe7, 0x05, 0x0a,
	0x06, 0x41, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x12, 0x47, 0x0a, 0x0a, 0x41, 0x63, 0x6c, 0x45, 0x6e,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70,
	0x2e, 0x41, 0x63, 0x6c, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x63,
	0x6c, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50,
	0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x63, 0x6f, 0x6e,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x61, 0x75,
	0x74, 0x6f, 0x77, 0x70, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x73, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x67, 0x6f, 0x61, 0x75,
	0x74, 0x6f, 0x77, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x49, 0x50, 0x12, 0x19, 0x2e, 0x67,
	0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x49, 0x50,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x50, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x43,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e,
	0x52, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74,
	0x6f, 0x77, 0x70, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x00, 0x32, 0xd2, 0x03, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x75, 0x6d,
	0x73, 0x12, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1f, 0x2e, 0x67,
	0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x22, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x53, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x09, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61,
	0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50,
	0x49, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x9a, 0x01, 0x0a, 0x08,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x43, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x00, 0x32, 0x80, 0x04, 0x0a, 0x07, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x12, 0x52, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77,
	0x70, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54,
	0x6f, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x67, 0x6f, 0x61,
	0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x2b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x61,
	0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70,
	0x2e, 0x41, 0x50, 0x49, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x00, 0x32, 0xa7, 0x02, 0x0a, 0x08,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x61, 0x75,
	0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x67,
	0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x6f, 0x61, 0x75,
	0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1c, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x00, 0x32, 0xe7, 0x03, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x46, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50,
	0x49, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x02, 0x4d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x61,
	0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50,
	0x49, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x23, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50,
	0x49, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x20, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x1f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x23, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32,
	0x89, 0x0b, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x70, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x54,
	0x6f, 0x70, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x56,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41,
	0x50, 0x49, 0x54, 0x6f, 0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x67,
	0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41,
	0x50, 0x49, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x54,
	0x77, 0x69, 0x6e, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70,
	0x54, 0x77, 0x69, 0x6e, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77,
	0x70, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x73, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1a, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x12, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x72, 0x65, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41,
	0x50, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41,
	0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x61,
	0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67,
	0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x15, 0x2e, 0x67, 0x6f, 0x61,
	0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e,
	0x6b, 0x1a, 0x23, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x15, 0x2e, 0x67, 0x6f, 0x61,
	0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x6e,
	0x6b, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x27, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50,
	0x49, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50,
	0x49, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x2e, 0x67,
	0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x74, 0x65, 0x6d, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0xf6, 0x04, 0x0a, 0x08,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x51, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x6f, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x09, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74,
	0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x24, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1d, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x23, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x24, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x24, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x42, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0x48, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x41, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74,
	0x6f, 0x77, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x00, 0x32, 0x9a,
	0x03, 0x0a, 0x08, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x04,
	0x56, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x72,
	0x56, 0x6f, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x1b, 0x2e, 0x67,
	0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77,
	0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0x00, 0x32, 0xea, 0x03, 0x0a, 0x09,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x4d, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74,
	0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x65,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77,
	0x70, 0x2e, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77,
	0x70, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x47, 0x0a, 0x0b, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x67,
	0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x92, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x75,
	0x6c, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50,
	0x75, 0x6c, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x6f,
	0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x62, 0x6f,
	0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b,
	0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x4e, 0x0a,
	0x09, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x56, 0x4f, 0x44, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x19, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x56, 0x4f, 0x44, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x4e, 0x0a,
	0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1c, 0x5a,
	0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x6f,
	0x77, 0x70, 0x2f, 0x67, 0x6f, 0x61, 0x75, 0x74, 0x6f, 0x77, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_spec_proto_rawDescOnce sync.Once
	file_spec_proto_rawDescData = file_spec_proto_rawDesc
)

func file_spec_proto_rawDescGZIP() []byte {
	file_spec_proto_rawDescOnce.Do(func() {
		file_spec_proto_rawDescData = protoimpl.X.CompressGZIP(file_spec_proto_rawDescData)
	})
	return file_spec_proto_rawDescData
}

var (
	file_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
	file_spec_proto_msgTypes  = make([]protoimpl.MessageInfo, 128)
	file_spec_proto_goTypes   = []interface{}{
		(PictureItemType)(0),                      // 0: goautowp.PictureItemType
		(ItemType)(0),                             // 1: goautowp.ItemType
		(PictureStatus)(0),                        // 2: goautowp.PictureStatus
		(ItemPictureType)(0),                      // 3: goautowp.ItemPictureType
		(CommentsType)(0),                         // 4: goautowp.CommentsType
		(PulseRequest_Period)(0),                  // 5: goautowp.PulseRequest.Period
		(CommentVote_VoteValue)(0),                // 6: goautowp.CommentVote.VoteValue
		(*ErrorDetails)(nil),                      // 7: goautowp.ErrorDetails
		(*PulseRequest)(nil),                      // 8: goautowp.PulseRequest
		(*PulseGrid)(nil),                         // 9: goautowp.PulseGrid
		(*PulseLegend)(nil),                       // 10: goautowp.PulseLegend
		(*PulseResponse)(nil),                     // 11: goautowp.PulseResponse
		(*Spec)(nil),                              // 12: goautowp.Spec
		(*SpecsItems)(nil),                        // 13: goautowp.SpecsItems
		(*Perspective)(nil),                       // 14: goautowp.Perspective
		(*PerspectivesItems)(nil),                 // 15: goautowp.PerspectivesItems
		(*PerspectiveGroup)(nil),                  // 16: goautowp.PerspectiveGroup
		(*PerspectivePage)(nil),                   // 17: goautowp.PerspectivePage
		(*PerspectivePagesItems)(nil),             // 18: goautowp.PerspectivePagesItems
		(*ReCaptchaConfig)(nil),                   // 19: goautowp.ReCaptchaConfig
		(*BrandIcons)(nil),                        // 20: goautowp.BrandIcons
		(*AclEnforceRequest)(nil),                 // 21: goautowp.AclEnforceRequest
		(*AclEnforceResult)(nil),                  // 22: goautowp.AclEnforceResult
		(*VehicleType)(nil),                       // 23: goautowp.VehicleType
		(*VehicleTypeItems)(nil),                  // 24: goautowp.VehicleTypeItems
		(*GetBrandVehicleTypesRequest)(nil),       // 25: goautowp.GetBrandVehicleTypesRequest
		(*BrandVehicleTypeItems)(nil),             // 26: goautowp.BrandVehicleTypeItems
		(*BrandVehicleType)(nil),                  // 27: goautowp.BrandVehicleType
		(*CreateContactRequest)(nil),              // 28: goautowp.CreateContactRequest
		(*DeleteContactRequest)(nil),              // 29: goautowp.DeleteContactRequest
		(*GetContactRequest)(nil),                 // 30: goautowp.GetContactRequest
		(*APIImage)(nil),                          // 31: goautowp.APIImage
		(*APIUser)(nil),                           // 32: goautowp.APIUser
		(*Contact)(nil),                           // 33: goautowp.Contact
		(*ContactItems)(nil),                      // 34: goautowp.ContactItems
		(*GetContactsRequest)(nil),                // 35: goautowp.GetContactsRequest
		(*CommentVoteItems)(nil),                  // 36: goautowp.CommentVoteItems
		(*CommentVote)(nil),                       // 37: goautowp.CommentVote
		(*APIBanItem)(nil),                        // 38: goautowp.APIBanItem
		(*APITrafficTopItem)(nil),                 // 39: goautowp.APITrafficTopItem
		(*APITrafficTopResponse)(nil),             // 40: goautowp.APITrafficTopResponse
		(*APIGetIPRequest)(nil),                   // 41: goautowp.APIGetIPRequest
		(*APIIPRights)(nil),                       // 42: goautowp.APIIPRights
		(*APIIP)(nil),                             // 43: goautowp.APIIP
		(*APICreateFeedbackRequest)(nil),          // 44: goautowp.APICreateFeedbackRequest
		(*DeleteFromTrafficWhitelistRequest)(nil), // 45: goautowp.DeleteFromTrafficWhitelistRequest
		(*DeleteFromTrafficBlacklistRequest)(nil), // 46: goautowp.DeleteFromTrafficBlacklistRequest
		(*AddToTrafficBlacklistRequest)(nil),      // 47: goautowp.AddToTrafficBlacklistRequest
		(*AddToTrafficWhitelistRequest)(nil),      // 48: goautowp.AddToTrafficWhitelistRequest
		(*APITrafficWhitelistItem)(nil),           // 49: goautowp.APITrafficWhitelistItem
		(*APITrafficWhitelistItems)(nil),          // 50: goautowp.APITrafficWhitelistItems
		(*APIForumsUserSummary)(nil),              // 51: goautowp.APIForumsUserSummary
		(*APICreateTopicRequest)(nil),             // 52: goautowp.APICreateTopicRequest
		(*APICreateTopicResponse)(nil),            // 53: goautowp.APICreateTopicResponse
		(*APISetTopicStatusRequest)(nil),          // 54: goautowp.APISetTopicStatusRequest
		(*APIMoveTopicRequest)(nil),               // 55: goautowp.APIMoveTopicRequest
		(*APIMessageNewCount)(nil),                // 56: goautowp.APIMessageNewCount
		(*APIMessageSummary)(nil),                 // 57: goautowp.APIMessageSummary
		(*APIDeleteUserRequest)(nil),              // 58: goautowp.APIDeleteUserRequest
		(*APIMeRequest)(nil),                      // 59: goautowp.APIMeRequest
		(*APIGetUserRequest)(nil),                 // 60: goautowp.APIGetUserRequest
		(*GetTopBrandsListRequest)(nil),           // 61: goautowp.GetTopBrandsListRequest
		(*APITopBrandsList)(nil),                  // 62: goautowp.APITopBrandsList
		(*APITopBrandsListItem)(nil),              // 63: goautowp.APITopBrandsListItem
		(*GetTopPersonsListRequest)(nil),          // 64: goautowp.GetTopPersonsListRequest
		(*GetTopTwinsBrandsListRequest)(nil),      // 65: goautowp.GetTopTwinsBrandsListRequest
		(*GetTopCategoriesListRequest)(nil),       // 66: goautowp.GetTopCategoriesListRequest
		(*GetTopFactoriesListRequest)(nil),        // 67: goautowp.GetTopFactoriesListRequest
		(*APITopPersonsList)(nil),                 // 68: goautowp.APITopPersonsList
		(*APITopPersonsListItem)(nil),             // 69: goautowp.APITopPersonsListItem
		(*APITopTwinsBrandsListItem)(nil),         // 70: goautowp.APITopTwinsBrandsListItem
		(*APITopTwinsBrandsList)(nil),             // 71: goautowp.APITopTwinsBrandsList
		(*APITopCategoriesList)(nil),              // 72: goautowp.APITopCategoriesList
		(*APITopCategoriesListItem)(nil),          // 73: goautowp.APITopCategoriesListItem
		(*APITopFactoriesList)(nil),               // 74: goautowp.APITopFactoriesList
		(*APITopFactoriesListItem)(nil),           // 75: goautowp.APITopFactoriesListItem
		(*ItemPicturesRequest)(nil),               // 76: goautowp.ItemPicturesRequest
		(*PicturesRequest)(nil),                   // 77: goautowp.PicturesRequest
		(*PictureFields)(nil),                     // 78: goautowp.PictureFields
		(*PreviewPicturesFields)(nil),             // 79: goautowp.PreviewPicturesFields
		(*ItemFields)(nil),                        // 80: goautowp.ItemFields
		(*ListItemsRequest)(nil),                  // 81: goautowp.ListItemsRequest
		(*GetTreeRequest)(nil),                    // 82: goautowp.GetTreeRequest
		(*APITreeItem)(nil),                       // 83: goautowp.APITreeItem
		(*APIItem)(nil),                           // 84: goautowp.APIItem
		(*APIItemList)(nil),                       // 85: goautowp.APIItemList
		(*CommentsSubscribeRequest)(nil),          // 86: goautowp.CommentsSubscribeRequest
		(*CommentsUnSubscribeRequest)(nil),        // 87: goautowp.CommentsUnSubscribeRequest
		(*GetCommentVotesRequest)(nil),            // 88: goautowp.GetCommentVotesRequest
		(*CommentsViewRequest)(nil),               // 89: goautowp.CommentsViewRequest
		(*CommentsSetDeletedRequest)(nil),         // 90: goautowp.CommentsSetDeletedRequest
		(*CommentsMoveCommentRequest)(nil),        // 91: goautowp.CommentsMoveCommentRequest
		(*CommentsVoteCommentRequest)(nil),        // 92: goautowp.CommentsVoteCommentRequest
		(*CommentsVoteCommentResponse)(nil),       // 93: goautowp.CommentsVoteCommentResponse
		(*MapGetPointsRequest)(nil),               // 94: goautowp.MapGetPointsRequest
		(*Point)(nil),                             // 95: goautowp.Point
		(*MapPoints)(nil),                         // 96: goautowp.MapPoints
		(*MapPoint)(nil),                          // 97: goautowp.MapPoint
		(*PicturesViewRequest)(nil),               // 98: goautowp.PicturesViewRequest
		(*PicturesVoteRequest)(nil),               // 99: goautowp.PicturesVoteRequest
		(*PicturesVoteSummary)(nil),               // 100: goautowp.PicturesVoteSummary
		(*ModerVoteTemplate)(nil),                 // 101: goautowp.ModerVoteTemplate
		(*ModerVoteTemplates)(nil),                // 102: goautowp.ModerVoteTemplates
		(*DeleteModerVoteTemplateRequest)(nil),    // 103: goautowp.DeleteModerVoteTemplateRequest
		(*MessagingDeleteMessage)(nil),            // 104: goautowp.MessagingDeleteMessage
		(*MessagingClearFolder)(nil),              // 105: goautowp.MessagingClearFolder
		(*MessagingCreateMessage)(nil),            // 106: goautowp.MessagingCreateMessage
		(*APIMessage)(nil),                        // 107: goautowp.APIMessage
		(*MessagingGetMessagesRequest)(nil),       // 108: goautowp.MessagingGetMessagesRequest
		(*MessagingGetMessagesResponse)(nil),      // 109: goautowp.MessagingGetMessagesResponse
		(*Pages)(nil),                             // 110: goautowp.Pages
		(*VODDataResponse)(nil),                   // 111: goautowp.VODDataResponse
		(*VODDataDate)(nil),                       // 112: goautowp.VODDataDate
		(*AboutDataResponse)(nil),                 // 113: goautowp.AboutDataResponse
		(*APIUserPreferencesRequest)(nil),         // 114: goautowp.APIUserPreferencesRequest
		(*APIUserPreferencesResponse)(nil),        // 115: goautowp.APIUserPreferencesResponse
		(*ArticlesRequest)(nil),                   // 116: goautowp.ArticlesRequest
		(*ArticlesResponse)(nil),                  // 117: goautowp.ArticlesResponse
		(*Article)(nil),                           // 118: goautowp.Article
		(*ArticleByCatnameRequest)(nil),           // 119: goautowp.ArticleByCatnameRequest
		(*APIContentLanguages)(nil),               // 120: goautowp.APIContentLanguages
		(*APIItemLinkRequest)(nil),                // 121: goautowp.APIItemLinkRequest
		(*APIGetItemLinksRequest)(nil),            // 122: goautowp.APIGetItemLinksRequest
		(*APIItemLinksResponse)(nil),              // 123: goautowp.APIItemLinksResponse
		(*APIItemLink)(nil),                       // 124: goautowp.APIItemLink
		(*APICreateItemLinkResponse)(nil),         // 125: goautowp.APICreateItemLinkResponse
		(*APIGetItemVehicleTypesRequest)(nil),     // 126: goautowp.APIGetItemVehicleTypesRequest
		(*APIItemVehicleType)(nil),                // 127: goautowp.APIItemVehicleType
		(*APIGetItemVehicleTypesResponse)(nil),    // 128: goautowp.APIGetItemVehicleTypesResponse
		(*APIItemVehicleTypeRequest)(nil),         // 129: goautowp.APIItemVehicleTypeRequest
		(*AddCommentRequest)(nil),                 // 130: goautowp.AddCommentRequest
		(*AddCommentResponse)(nil),                // 131: goautowp.AddCommentResponse
		(*APIGetTextRequest)(nil),                 // 132: goautowp.APIGetTextRequest
		(*TextRevision)(nil),                      // 133: goautowp.TextRevision
		(*APIGetTextResponse)(nil),                // 134: goautowp.APIGetTextResponse
		(*errdetails.RetryInfo)(nil),              // 135: google.rpc.RetryInfo
		(*errdetails.DebugInfo)(nil),              // 136: google.rpc.DebugInfo
		(*errdetails.QuotaFailure)(nil),           // 137: google.rpc.QuotaFailure
		(*errdetails.PreconditionFailure)(nil),    // 138: google.rpc.PreconditionFailure
		(*errdetails.BadRequest)(nil),             // 139: google.rpc.BadRequest
		(*errdetails.RequestInfo)(nil),            // 140: google.rpc.RequestInfo
		(*errdetails.Help)(nil),                   // 141: google.rpc.Help
		(*errdetails.LocalizedMessage)(nil),       // 142: google.rpc.LocalizedMessage
		(*timestamppb.Timestamp)(nil),             // 143: google.protobuf.Timestamp
		(*emptypb.Empty)(nil),                     // 144: google.protobuf.Empty
	}
)
var file_spec_proto_depIdxs = []int32{
	135, // 0: goautowp.ErrorDetails.retryInfo:type_name -> google.rpc.RetryInfo
	136, // 1: goautowp.ErrorDetails.debugInfo:type_name -> google.rpc.DebugInfo
	137, // 2: goautowp.ErrorDetails.quotaFailure:type_name -> google.rpc.QuotaFailure
	138, // 3: goautowp.ErrorDetails.preconditionFailure:type_name -> google.rpc.PreconditionFailure
	139, // 4: goautowp.ErrorDetails.badRequest:type_name -> google.rpc.BadRequest
	140, // 5: goautowp.ErrorDetails.requestInfo:type_name -> google.rpc.RequestInfo
	141, // 6: goautowp.ErrorDetails.help:type_name -> google.rpc.Help
	142, // 7: goautowp.ErrorDetails.localizedMessage:type_name -> google.rpc.LocalizedMessage
	5,   // 8: goautowp.PulseRequest.period:type_name -> goautowp.PulseRequest.Period
	9,   // 9: goautowp.PulseResponse.grid:type_name -> goautowp.PulseGrid
	10,  // 10: goautowp.PulseResponse.legend:type_name -> goautowp.PulseLegend
	12,  // 11: goautowp.Spec.childs:type_name -> goautowp.Spec
	12,  // 12: goautowp.SpecsItems.items:type_name -> goautowp.Spec
	14,  // 13: goautowp.PerspectivesItems.items:type_name -> goautowp.Perspective
	14,  // 14: goautowp.PerspectiveGroup.perspectives:type_name -> goautowp.Perspective
	16,  // 15: goautowp.PerspectivePage.groups:type_name -> goautowp.PerspectiveGroup
	17,  // 16: goautowp.PerspectivePagesItems.items:type_name -> goautowp.PerspectivePage
	23,  // 17: goautowp.VehicleType.childs:type_name -> goautowp.VehicleType
	23,  // 18: goautowp.VehicleTypeItems.items:type_name -> goautowp.VehicleType
	27,  // 19: goautowp.BrandVehicleTypeItems.items:type_name -> goautowp.BrandVehicleType
	31,  // 20: goautowp.APIUser.avatar:type_name -> goautowp.APIImage
	143, // 21: goautowp.APIUser.last_online:type_name -> google.protobuf.Timestamp
	32,  // 22: goautowp.Contact.user:type_name -> goautowp.APIUser
	33,  // 23: goautowp.ContactItems.items:type_name -> goautowp.Contact
	37,  // 24: goautowp.CommentVoteItems.items:type_name -> goautowp.CommentVote
	6,   // 25: goautowp.CommentVote.value:type_name -> goautowp.CommentVote.VoteValue
	32,  // 26: goautowp.CommentVote.user:type_name -> goautowp.APIUser
	143, // 27: goautowp.APIBanItem.until:type_name -> google.protobuf.Timestamp
	32,  // 28: goautowp.APIBanItem.by_user:type_name -> goautowp.APIUser
	38,  // 29: goautowp.APITrafficTopItem.ban:type_name -> goautowp.APIBanItem
	39,  // 30: goautowp.APITrafficTopResponse.items:type_name -> goautowp.APITrafficTopItem
	38,  // 31: goautowp.APIIP.blacklist:type_name -> goautowp.APIBanItem
	42,  // 32: goautowp.APIIP.rights:type_name -> goautowp.APIIPRights
	49,  // 33: goautowp.APITrafficWhitelistItems.items:type_name -> goautowp.APITrafficWhitelistItem
	63,  // 34: goautowp.APITopBrandsList.brands:type_name -> goautowp.APITopBrandsListItem
	0,   // 35: goautowp.GetTopPersonsListRequest.picture_item_type:type_name -> goautowp.PictureItemType
	69,  // 36: goautowp.APITopPersonsList.items:type_name -> goautowp.APITopPersonsListItem
	70,  // 37: goautowp.APITopTwinsBrandsList.items:type_name -> goautowp.APITopTwinsBrandsListItem
	73,  // 38: goautowp.APITopCategoriesList.items:type_name -> goautowp.APITopCategoriesListItem
	75,  // 39: goautowp.APITopFactoriesList.items:type_name -> goautowp.APITopFactoriesListItem
	3,   // 40: goautowp.ItemPicturesRequest.type_id:type_name -> goautowp.ItemPictureType
	77,  // 41: goautowp.ItemPicturesRequest.pictures:type_name -> goautowp.PicturesRequest
	2,   // 42: goautowp.PicturesRequest.status:type_name -> goautowp.PictureStatus
	76,  // 43: goautowp.PicturesRequest.item_picture:type_name -> goautowp.ItemPicturesRequest
	78,  // 44: goautowp.PreviewPicturesFields.picture:type_name -> goautowp.PictureFields
	79,  // 45: goautowp.ItemFields.preview_pictures:type_name -> goautowp.PreviewPicturesFields
	80,  // 46: goautowp.ListItemsRequest.fields:type_name -> goautowp.ItemFields
	1,   // 47: goautowp.ListItemsRequest.type_id:type_name -> goautowp.ItemType
	76,  // 48: goautowp.ListItemsRequest.descendant_pictures:type_name -> goautowp.ItemPicturesRequest
	76,  // 49: goautowp.ListItemsRequest.preview_pictures:type_name -> goautowp.ItemPicturesRequest
	83,  // 50: goautowp.APITreeItem.childs:type_name -> goautowp.APITreeItem
	84,  // 51: goautowp.APIItemList.items:type_name -> goautowp.APIItem
	4,   // 52: goautowp.CommentsSubscribeRequest.type_id:type_name -> goautowp.CommentsType
	4,   // 53: goautowp.CommentsUnSubscribeRequest.type_id:type_name -> goautowp.CommentsType
	4,   // 54: goautowp.CommentsViewRequest.type_id:type_name -> goautowp.CommentsType
	4,   // 55: goautowp.CommentsMoveCommentRequest.type_id:type_name -> goautowp.CommentsType
	97,  // 56: goautowp.MapPoints.points:type_name -> goautowp.MapPoint
	95,  // 57: goautowp.MapPoint.location:type_name -> goautowp.Point
	31,  // 58: goautowp.MapPoint.image:type_name -> goautowp.APIImage
	101, // 59: goautowp.ModerVoteTemplates.items:type_name -> goautowp.ModerVoteTemplate
	143, // 60: goautowp.APIMessage.date:type_name -> google.protobuf.Timestamp
	107, // 61: goautowp.MessagingGetMessagesResponse.items:type_name -> goautowp.APIMessage
	110, // 62: goautowp.MessagingGetMessagesResponse.paginator:type_name -> goautowp.Pages
	112, // 63: goautowp.VODDataResponse.dates:type_name -> goautowp.VODDataDate
	143, // 64: goautowp.VODDataDate.date:type_name -> google.protobuf.Timestamp
	118, // 65: goautowp.ArticlesResponse.items:type_name -> goautowp.Article
	110, // 66: goautowp.ArticlesResponse.paginator:type_name -> goautowp.Pages
	143, // 67: goautowp.Article.date:type_name -> google.protobuf.Timestamp
	124, // 68: goautowp.APIItemLinksResponse.items:type_name -> goautowp.APIItemLink
	127, // 69: goautowp.APIGetItemVehicleTypesResponse.items:type_name -> goautowp.APIItemVehicleType
	4,   // 70: goautowp.AddCommentRequest.type_id:type_name -> goautowp.CommentsType
	133, // 71: goautowp.APIGetTextResponse.current:type_name -> goautowp.TextRevision
	133, // 72: goautowp.APIGetTextResponse.prev:type_name -> goautowp.TextRevision
	133, // 73: goautowp.APIGetTextResponse.next:type_name -> goautowp.TextRevision
	21,  // 74: goautowp.Autowp.AclEnforce:input_type -> goautowp.AclEnforceRequest
	44,  // 75: goautowp.Autowp.CreateFeedback:input_type -> goautowp.APICreateFeedbackRequest
	144, // 76: goautowp.Autowp.GetBrandIcons:input_type -> google.protobuf.Empty
	25,  // 77: goautowp.Autowp.GetBrandVehicleTypes:input_type -> goautowp.GetBrandVehicleTypesRequest
	41,  // 78: goautowp.Autowp.GetIP:input_type -> goautowp.APIGetIPRequest
	144, // 79: goautowp.Autowp.GetPerspectives:input_type -> google.protobuf.Empty
	144, // 80: goautowp.Autowp.GetPerspectivePages:input_type -> google.protobuf.Empty
	144, // 81: goautowp.Autowp.GetReCaptchaConfig:input_type -> google.protobuf.Empty
	144, // 82: goautowp.Autowp.GetSpecs:input_type -> google.protobuf.Empty
	144, // 83: goautowp.Autowp.GetVehicleTypes:input_type -> google.protobuf.Empty
	144, // 84: goautowp.Forums.GetUserSummary:input_type -> google.protobuf.Empty
	52,  // 85: goautowp.Forums.CreateTopic:input_type -> goautowp.APICreateTopicRequest
	54,  // 86: goautowp.Forums.CloseTopic:input_type -> goautowp.APISetTopicStatusRequest
	54,  // 87: goautowp.Forums.OpenTopic:input_type -> goautowp.APISetTopicStatusRequest
	54,  // 88: goautowp.Forums.DeleteTopic:input_type -> goautowp.APISetTopicStatusRequest
	55,  // 89: goautowp.Forums.MoveTopic:input_type -> goautowp.APIMoveTopicRequest
	116, // 90: goautowp.Articles.GetList:input_type -> goautowp.ArticlesRequest
	119, // 91: goautowp.Articles.GetItemByCatname:input_type -> goautowp.ArticleByCatnameRequest
	47,  // 92: goautowp.Traffic.AddToBlacklist:input_type -> goautowp.AddToTrafficBlacklistRequest
	48,  // 93: goautowp.Traffic.AddToWhitelist:input_type -> goautowp.AddToTrafficWhitelistRequest
	46,  // 94: goautowp.Traffic.DeleteFromBlacklist:input_type -> goautowp.DeleteFromTrafficBlacklistRequest
	45,  // 95: goautowp.Traffic.DeleteFromWhitelist:input_type -> goautowp.DeleteFromTrafficWhitelistRequest
	144, // 96: goautowp.Traffic.GetTop:input_type -> google.protobuf.Empty
	144, // 97: goautowp.Traffic.GetWhitelist:input_type -> google.protobuf.Empty
	28,  // 98: goautowp.Contacts.CreateContact:input_type -> goautowp.CreateContactRequest
	29,  // 99: goautowp.Contacts.DeleteContact:input_type -> goautowp.DeleteContactRequest
	30,  // 100: goautowp.Contacts.GetContact:input_type -> goautowp.GetContactRequest
	35,  // 101: goautowp.Contacts.GetContacts:input_type -> goautowp.GetContactsRequest
	58,  // 102: goautowp.Users.DeleteUser:input_type -> goautowp.APIDeleteUserRequest
	60,  // 103: goautowp.Users.GetUser:input_type -> goautowp.APIGetUserRequest
	59,  // 104: goautowp.Users.Me:input_type -> goautowp.APIMeRequest
	114, // 105: goautowp.Users.GetUserPreferences:input_type -> goautowp.APIUserPreferencesRequest
	114, // 106: goautowp.Users.DisableUserCommentsNotifications:input_type -> goautowp.APIUserPreferencesRequest
	114, // 107: goautowp.Users.EnableUserCommentsNotifications:input_type -> goautowp.APIUserPreferencesRequest
	61,  // 108: goautowp.Items.GetTopBrandsList:input_type -> goautowp.GetTopBrandsListRequest
	64,  // 109: goautowp.Items.GetTopPersonsList:input_type -> goautowp.GetTopPersonsListRequest
	67,  // 110: goautowp.Items.GetTopFactoriesList:input_type -> goautowp.GetTopFactoriesListRequest
	66,  // 111: goautowp.Items.GetTopCategoriesList:input_type -> goautowp.GetTopCategoriesListRequest
	65,  // 112: goautowp.Items.GetTopTwinsBrandsList:input_type -> goautowp.GetTopTwinsBrandsListRequest
	81,  // 113: goautowp.Items.List:input_type -> goautowp.ListItemsRequest
	82,  // 114: goautowp.Items.GetTree:input_type -> goautowp.GetTreeRequest
	144, // 115: goautowp.Items.GetContentLanguages:input_type -> google.protobuf.Empty
	121, // 116: goautowp.Items.GetItemLink:input_type -> goautowp.APIItemLinkRequest
	122, // 117: goautowp.Items.GetItemLinks:input_type -> goautowp.APIGetItemLinksRequest
	121, // 118: goautowp.Items.DeleteItemLink:input_type -> goautowp.APIItemLinkRequest
	124, // 119: goautowp.Items.CreateItemLink:input_type -> goautowp.APIItemLink
	124, // 120: goautowp.Items.UpdateItemLink:input_type -> goautowp.APIItemLink
	126, // 121: goautowp.Items.GetItemVehicleTypes:input_type -> goautowp.APIGetItemVehicleTypesRequest
	129, // 122: goautowp.Items.GetItemVehicleType:input_type -> goautowp.APIItemVehicleTypeRequest
	127, // 123: goautowp.Items.CreateItemVehicleType:input_type -> goautowp.APIItemVehicleType
	129, // 124: goautowp.Items.DeleteItemVehicleType:input_type -> goautowp.APIItemVehicleTypeRequest
	88,  // 125: goautowp.Comments.GetCommentVotes:input_type -> goautowp.GetCommentVotesRequest
	86,  // 126: goautowp.Comments.Subscribe:input_type -> goautowp.CommentsSubscribeRequest
	87,  // 127: goautowp.Comments.UnSubscribe:input_type -> goautowp.CommentsUnSubscribeRequest
	89,  // 128: goautowp.Comments.View:input_type -> goautowp.CommentsViewRequest
	90,  // 129: goautowp.Comments.SetDeleted:input_type -> goautowp.CommentsSetDeletedRequest
	91,  // 130: goautowp.Comments.MoveComment:input_type -> goautowp.CommentsMoveCommentRequest
	92,  // 131: goautowp.Comments.VoteComment:input_type -> goautowp.CommentsVoteCommentRequest
	130, // 132: goautowp.Comments.Add:input_type -> goautowp.AddCommentRequest
	94,  // 133: goautowp.Map.GetPoints:input_type -> goautowp.MapGetPointsRequest
	98,  // 134: goautowp.Pictures.View:input_type -> goautowp.PicturesViewRequest
	99,  // 135: goautowp.Pictures.Vote:input_type -> goautowp.PicturesVoteRequest
	101, // 136: goautowp.Pictures.CreateModerVoteTemplate:input_type -> goautowp.ModerVoteTemplate
	103, // 137: goautowp.Pictures.DeleteModerVoteTemplate:input_type -> goautowp.DeleteModerVoteTemplateRequest
	144, // 138: goautowp.Pictures.GetModerVoteTemplates:input_type -> google.protobuf.Empty
	144, // 139: goautowp.Messaging.GetMessagesNewCount:input_type -> google.protobuf.Empty
	144, // 140: goautowp.Messaging.GetMessagesSummary:input_type -> google.protobuf.Empty
	104, // 141: goautowp.Messaging.DeleteMessage:input_type -> goautowp.MessagingDeleteMessage
	105, // 142: goautowp.Messaging.ClearFolder:input_type -> goautowp.MessagingClearFolder
	106, // 143: goautowp.Messaging.CreateMessage:input_type -> goautowp.MessagingCreateMessage
	108, // 144: goautowp.Messaging.GetMessages:input_type -> goautowp.MessagingGetMessagesRequest
	8,   // 145: goautowp.Statistics.GetPulse:input_type -> goautowp.PulseRequest
	144, // 146: goautowp.Statistics.GetAboutData:input_type -> google.protobuf.Empty
	144, // 147: goautowp.Donations.GetVODData:input_type -> google.protobuf.Empty
	132, // 148: goautowp.Text.GetText:input_type -> goautowp.APIGetTextRequest
	22,  // 149: goautowp.Autowp.AclEnforce:output_type -> goautowp.AclEnforceResult
	144, // 150: goautowp.Autowp.CreateFeedback:output_type -> google.protobuf.Empty
	20,  // 151: goautowp.Autowp.GetBrandIcons:output_type -> goautowp.BrandIcons
	26,  // 152: goautowp.Autowp.GetBrandVehicleTypes:output_type -> goautowp.BrandVehicleTypeItems
	43,  // 153: goautowp.Autowp.GetIP:output_type -> goautowp.APIIP
	15,  // 154: goautowp.Autowp.GetPerspectives:output_type -> goautowp.PerspectivesItems
	18,  // 155: goautowp.Autowp.GetPerspectivePages:output_type -> goautowp.PerspectivePagesItems
	19,  // 156: goautowp.Autowp.GetReCaptchaConfig:output_type -> goautowp.ReCaptchaConfig
	13,  // 157: goautowp.Autowp.GetSpecs:output_type -> goautowp.SpecsItems
	24,  // 158: goautowp.Autowp.GetVehicleTypes:output_type -> goautowp.VehicleTypeItems
	51,  // 159: goautowp.Forums.GetUserSummary:output_type -> goautowp.APIForumsUserSummary
	53,  // 160: goautowp.Forums.CreateTopic:output_type -> goautowp.APICreateTopicResponse
	144, // 161: goautowp.Forums.CloseTopic:output_type -> google.protobuf.Empty
	144, // 162: goautowp.Forums.OpenTopic:output_type -> google.protobuf.Empty
	144, // 163: goautowp.Forums.DeleteTopic:output_type -> google.protobuf.Empty
	144, // 164: goautowp.Forums.MoveTopic:output_type -> google.protobuf.Empty
	117, // 165: goautowp.Articles.GetList:output_type -> goautowp.ArticlesResponse
	118, // 166: goautowp.Articles.GetItemByCatname:output_type -> goautowp.Article
	144, // 167: goautowp.Traffic.AddToBlacklist:output_type -> google.protobuf.Empty
	144, // 168: goautowp.Traffic.AddToWhitelist:output_type -> google.protobuf.Empty
	144, // 169: goautowp.Traffic.DeleteFromBlacklist:output_type -> google.protobuf.Empty
	144, // 170: goautowp.Traffic.DeleteFromWhitelist:output_type -> google.protobuf.Empty
	40,  // 171: goautowp.Traffic.GetTop:output_type -> goautowp.APITrafficTopResponse
	50,  // 172: goautowp.Traffic.GetWhitelist:output_type -> goautowp.APITrafficWhitelistItems
	144, // 173: goautowp.Contacts.CreateContact:output_type -> google.protobuf.Empty
	144, // 174: goautowp.Contacts.DeleteContact:output_type -> google.protobuf.Empty
	33,  // 175: goautowp.Contacts.GetContact:output_type -> goautowp.Contact
	34,  // 176: goautowp.Contacts.GetContacts:output_type -> goautowp.ContactItems
	144, // 177: goautowp.Users.DeleteUser:output_type -> google.protobuf.Empty
	32,  // 178: goautowp.Users.GetUser:output_type -> goautowp.APIUser
	32,  // 179: goautowp.Users.Me:output_type -> goautowp.APIUser
	115, // 180: goautowp.Users.GetUserPreferences:output_type -> goautowp.APIUserPreferencesResponse
	144, // 181: goautowp.Users.DisableUserCommentsNotifications:output_type -> google.protobuf.Empty
	144, // 182: goautowp.Users.EnableUserCommentsNotifications:output_type -> google.protobuf.Empty
	62,  // 183: goautowp.Items.GetTopBrandsList:output_type -> goautowp.APITopBrandsList
	68,  // 184: goautowp.Items.GetTopPersonsList:output_type -> goautowp.APITopPersonsList
	74,  // 185: goautowp.Items.GetTopFactoriesList:output_type -> goautowp.APITopFactoriesList
	72,  // 186: goautowp.Items.GetTopCategoriesList:output_type -> goautowp.APITopCategoriesList
	71,  // 187: goautowp.Items.GetTopTwinsBrandsList:output_type -> goautowp.APITopTwinsBrandsList
	85,  // 188: goautowp.Items.List:output_type -> goautowp.APIItemList
	83,  // 189: goautowp.Items.GetTree:output_type -> goautowp.APITreeItem
	120, // 190: goautowp.Items.GetContentLanguages:output_type -> goautowp.APIContentLanguages
	124, // 191: goautowp.Items.GetItemLink:output_type -> goautowp.APIItemLink
	123, // 192: goautowp.Items.GetItemLinks:output_type -> goautowp.APIItemLinksResponse
	144, // 193: goautowp.Items.DeleteItemLink:output_type -> google.protobuf.Empty
	125, // 194: goautowp.Items.CreateItemLink:output_type -> goautowp.APICreateItemLinkResponse
	144, // 195: goautowp.Items.UpdateItemLink:output_type -> google.protobuf.Empty
	128, // 196: goautowp.Items.GetItemVehicleTypes:output_type -> goautowp.APIGetItemVehicleTypesResponse
	127, // 197: goautowp.Items.GetItemVehicleType:output_type -> goautowp.APIItemVehicleType
	144, // 198: goautowp.Items.CreateItemVehicleType:output_type -> google.protobuf.Empty
	144, // 199: goautowp.Items.DeleteItemVehicleType:output_type -> google.protobuf.Empty
	36,  // 200: goautowp.Comments.GetCommentVotes:output_type -> goautowp.CommentVoteItems
	144, // 201: goautowp.Comments.Subscribe:output_type -> google.protobuf.Empty
	144, // 202: goautowp.Comments.UnSubscribe:output_type -> google.protobuf.Empty
	144, // 203: goautowp.Comments.View:output_type -> google.protobuf.Empty
	144, // 204: goautowp.Comments.SetDeleted:output_type -> google.protobuf.Empty
	144, // 205: goautowp.Comments.MoveComment:output_type -> google.protobuf.Empty
	93,  // 206: goautowp.Comments.VoteComment:output_type -> goautowp.CommentsVoteCommentResponse
	131, // 207: goautowp.Comments.Add:output_type -> goautowp.AddCommentResponse
	96,  // 208: goautowp.Map.GetPoints:output_type -> goautowp.MapPoints
	144, // 209: goautowp.Pictures.View:output_type -> google.protobuf.Empty
	100, // 210: goautowp.Pictures.Vote:output_type -> goautowp.PicturesVoteSummary
	101, // 211: goautowp.Pictures.CreateModerVoteTemplate:output_type -> goautowp.ModerVoteTemplate
	144, // 212: goautowp.Pictures.DeleteModerVoteTemplate:output_type -> google.protobuf.Empty
	102, // 213: goautowp.Pictures.GetModerVoteTemplates:output_type -> goautowp.ModerVoteTemplates
	56,  // 214: goautowp.Messaging.GetMessagesNewCount:output_type -> goautowp.APIMessageNewCount
	57,  // 215: goautowp.Messaging.GetMessagesSummary:output_type -> goautowp.APIMessageSummary
	144, // 216: goautowp.Messaging.DeleteMessage:output_type -> google.protobuf.Empty
	144, // 217: goautowp.Messaging.ClearFolder:output_type -> google.protobuf.Empty
	144, // 218: goautowp.Messaging.CreateMessage:output_type -> google.protobuf.Empty
	109, // 219: goautowp.Messaging.GetMessages:output_type -> goautowp.MessagingGetMessagesResponse
	11,  // 220: goautowp.Statistics.GetPulse:output_type -> goautowp.PulseResponse
	113, // 221: goautowp.Statistics.GetAboutData:output_type -> goautowp.AboutDataResponse
	111, // 222: goautowp.Donations.GetVODData:output_type -> goautowp.VODDataResponse
	134, // 223: goautowp.Text.GetText:output_type -> goautowp.APIGetTextResponse
	149, // [149:224] is the sub-list for method output_type
	74,  // [74:149] is the sub-list for method input_type
	74,  // [74:74] is the sub-list for extension type_name
	74,  // [74:74] is the sub-list for extension extendee
	0,   // [0:74] is the sub-list for field type_name
}

func init() { file_spec_proto_init() }
func file_spec_proto_init() {
	if File_spec_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spec_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PulseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PulseGrid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PulseLegend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PulseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecsItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Perspective); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerspectivesItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerspectiveGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerspectivePage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerspectivePagesItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReCaptchaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandIcons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AclEnforceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AclEnforceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleTypeItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandVehicleTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandVehicleTypeItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandVehicleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentVoteItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIBanItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITrafficTopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITrafficTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIGetIPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIIPRights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIIP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APICreateFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFromTrafficWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFromTrafficBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToTrafficBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToTrafficWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITrafficWhitelistItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITrafficWhitelistItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIForumsUserSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APICreateTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APICreateTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APISetTopicStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIMoveTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIMessageNewCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIMessageSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIDeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIMeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIGetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopBrandsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITopBrandsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITopBrandsListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopPersonsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopTwinsBrandsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopCategoriesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopFactoriesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITopPersonsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITopPersonsListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITopTwinsBrandsListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITopTwinsBrandsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITopCategoriesList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITopCategoriesListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITopFactoriesList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITopFactoriesListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemPicturesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PicturesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PictureFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewPicturesFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APITreeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIItemList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsUnSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentVotesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsSetDeletedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsMoveCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsVoteCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsVoteCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapGetPointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapPoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PicturesViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PicturesVoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PicturesVoteSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModerVoteTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModerVoteTemplates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModerVoteTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingDeleteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingClearFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingCreateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingGetMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagingGetMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VODDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VODDataDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AboutDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIUserPreferencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIUserPreferencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleByCatnameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIContentLanguages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIItemLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIGetItemLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIItemLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIItemLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APICreateItemLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIGetItemVehicleTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIItemVehicleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIGetItemVehicleTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIItemVehicleTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIGetTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIGetTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spec_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   128,
			NumExtensions: 0,
			NumServices:   14,
		},
		GoTypes:           file_spec_proto_goTypes,
		DependencyIndexes: file_spec_proto_depIdxs,
		EnumInfos:         file_spec_proto_enumTypes,
		MessageInfos:      file_spec_proto_msgTypes,
	}.Build()
	File_spec_proto = out.File
	file_spec_proto_rawDesc = nil
	file_spec_proto_goTypes = nil
	file_spec_proto_depIdxs = nil
}
