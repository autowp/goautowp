syntax = "proto3";
package goautowp;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
//import "google/rpc/status.proto";
//import "google/protobuf/any.proto";
import "google/rpc/error_details.proto";

option go_package = "github.com/autowp/goautowp";

service Autowp {
  rpc AclEnforce(AclEnforceRequest) returns (AclEnforceResult) {}
  rpc CreateFeedback(APICreateFeedbackRequest) returns (google.protobuf.Empty) {}
  rpc GetBrandIcons(google.protobuf.Empty) returns (BrandIcons) {}
  rpc GetBrandVehicleTypes(GetBrandVehicleTypesRequest) returns (BrandVehicleTypeItems) {}
  rpc GetForumsUserSummary(google.protobuf.Empty) returns (APIForumsUserSummary) {}
  rpc GetIP(APIGetIPRequest) returns (APIIP) {}
  rpc GetPerspectives(google.protobuf.Empty) returns (PerspectivesItems) {}
  rpc GetPerspectivePages(google.protobuf.Empty) returns (PerspectivePagesItems) {}
  rpc GetReCaptchaConfig(google.protobuf.Empty) returns (ReCaptchaConfig) {}
  rpc GetSpecs(google.protobuf.Empty) returns (SpecsItems) {}
  rpc GetVehicleTypes(google.protobuf.Empty) returns (VehicleTypeItems) {}
}

service Articles {
  rpc GetList(ArticlesRequest) returns (ArticlesResponse) {}
  rpc GetItemByCatname(ArticleByCatnameRequest) returns (Article) {}
}

service Traffic {
  rpc AddToBlacklist(AddToTrafficBlacklistRequest) returns (google.protobuf.Empty) {}
  rpc AddToWhitelist(AddToTrafficWhitelistRequest) returns (google.protobuf.Empty) {}
  rpc DeleteFromBlacklist(DeleteFromTrafficBlacklistRequest) returns (google.protobuf.Empty) {}
  rpc DeleteFromWhitelist(DeleteFromTrafficWhitelistRequest) returns (google.protobuf.Empty) {}
  rpc GetTop(google.protobuf.Empty) returns (APITrafficTopResponse) {}
  rpc GetWhitelist(google.protobuf.Empty) returns (APITrafficWhitelistItems) {}
}

service Contacts {
  rpc CreateContact(CreateContactRequest) returns (google.protobuf.Empty) {}
  rpc DeleteContact(DeleteContactRequest) returns (google.protobuf.Empty) {}
  rpc GetContact(GetContactRequest) returns (Contact) {}
  rpc GetContacts(GetContactsRequest) returns (ContactItems) {}
}

service Users {
  rpc DeleteUser(APIDeleteUserRequest) returns (google.protobuf.Empty) {}
  rpc GetUser(APIGetUserRequest) returns (APIUser) {}
  rpc Me(APIMeRequest) returns (APIUser) {}
  rpc GetUserPreferences(APIUserPreferencesRequest) returns (APIUserPreferencesResponse) {}
  rpc DisableUserCommentsNotifications(APIUserPreferencesRequest) returns (google.protobuf.Empty) {}
  rpc EnableUserCommentsNotifications(APIUserPreferencesRequest) returns (google.protobuf.Empty) {}
}

service Items {
  rpc GetTopBrandsList(GetTopBrandsListRequest) returns (APITopBrandsList) {}
  rpc GetTopPersonsList(GetTopPersonsListRequest) returns (APITopPersonsList) {}
  rpc GetTopFactoriesList(GetTopFactoriesListRequest) returns (APITopFactoriesList) {}
  rpc GetTopCategoriesList(GetTopCategoriesListRequest) returns (APITopCategoriesList) {}
  rpc GetTopTwinsBrandsList(GetTopTwinsBrandsListRequest) returns (APITopTwinsBrandsList) {}
  rpc List(ListItemsRequest) returns (APIItemList) {}
  rpc GetTree(GetTreeRequest) returns (APITreeItem) {}
  rpc GetContentLanguages(google.protobuf.Empty) returns (APIContentLanguages) {}
}

service Comments {
  rpc GetCommentVotes(GetCommentVotesRequest) returns (CommentVoteItems) {}
  rpc Subscribe(CommentsSubscribeRequest) returns (google.protobuf.Empty) {}
  rpc UnSubscribe(CommentsUnSubscribeRequest) returns (google.protobuf.Empty) {}
  rpc View(CommentsViewRequest) returns (google.protobuf.Empty) {}
  rpc SetDeleted(CommentsSetDeletedRequest) returns (google.protobuf.Empty) {}
  rpc MoveComment(CommentsMoveCommentRequest) returns (google.protobuf.Empty) {}
  rpc VoteComment(CommentsVoteCommentRequest) returns (CommentsVoteCommentResponse) {}
}

service Map {
  rpc GetPoints(MapGetPointsRequest) returns (MapPoints) {}
}

service Pictures {
  rpc View(PicturesViewRequest) returns (google.protobuf.Empty) {}
  rpc Vote(PicturesVoteRequest) returns (PicturesVoteSummary) {}
  rpc CreateModerVoteTemplate(ModerVoteTemplate) returns (ModerVoteTemplate) {}
  rpc DeleteModerVoteTemplate(DeleteModerVoteTemplateRequest) returns (google.protobuf.Empty) {}
  rpc GetModerVoteTemplates(google.protobuf.Empty) returns (ModerVoteTemplates) {}
}

service Messaging {
  rpc GetMessagesNewCount(google.protobuf.Empty) returns (APIMessageNewCount) {}
  rpc GetMessagesSummary(google.protobuf.Empty) returns (APIMessageSummary) {}
  rpc DeleteMessage(MessagingDeleteMessage) returns (google.protobuf.Empty) {}
  rpc ClearFolder(MessagingClearFolder) returns (google.protobuf.Empty) {}
  rpc CreateMessage(MessagingCreateMessage) returns (google.protobuf.Empty) {}
  rpc GetMessages(MessagingGetMessagesRequest) returns (MessagingGetMessagesResponse) {}
}

service Statistics {
  rpc GetPulse(PulseRequest) returns (PulseResponse) {}
  rpc GetAboutData(google.protobuf.Empty) returns (AboutDataResponse) {}
}

message ErrorDetails {
  google.rpc.RetryInfo retryInfo = 1;
  google.rpc.DebugInfo debugInfo = 2;
  google.rpc.QuotaFailure quotaFailure = 3;
  google.rpc.PreconditionFailure preconditionFailure = 4;
  google.rpc.BadRequest badRequest = 5;
  google.rpc.RequestInfo requestInfo = 6;
  google.rpc.Help help = 7;
  google.rpc.LocalizedMessage localizedMessage = 8;
}

service Donations {
  rpc GetVODData(google.protobuf.Empty) returns (VODDataResponse) {}
}

message PulseRequest {
  enum Period {
    DEFAULT = 0;
    YEAR = 1;
    MONTH = 2;
  }
  Period period = 1;
}

message PulseGrid {
  repeated float line = 1;
  string color = 2;
  int64 user_id = 3;
}

message PulseLegend {
  int64 user_id = 1;
  string color = 2;
}

message PulseResponse {
  repeated PulseGrid grid = 1;
  repeated PulseLegend legend = 2;
  repeated string labels = 3;
}

message Spec {
  int32 id = 1;
  string name = 2;
  string short_name = 3;
  repeated Spec childs = 4;
}

message SpecsItems {
  repeated Spec items = 1;
}

message Perspective {
  int32 id = 1;
  string name = 2;
}

message PerspectivesItems {
  repeated Perspective items = 1;
}

message PerspectiveGroup {
  int32 id = 1;
  string name = 2;
  repeated Perspective perspectives = 3;
}

message PerspectivePage {
  int32 id = 1;
  string name = 2;
  repeated PerspectiveGroup groups = 3;
}

message PerspectivePagesItems {
  repeated PerspectivePage items = 1;
}

message ReCaptchaConfig {
  string public_key = 1;
}

message BrandIcons {
  string image = 1;
  string css = 2;
}

message AclEnforceRequest {
  string resource = 1;
  string privilege = 2;
}

message AclEnforceResult {
  bool result = 1;
}

message VehicleType {
  int32 id = 1;
  string name = 2;
  repeated VehicleType childs = 4;
}

message VehicleTypeItems {
  repeated VehicleType items = 1;
}

message GetBrandVehicleTypesRequest {
  int32 brand_id = 1;
}

message BrandVehicleTypeItems {
  repeated BrandVehicleType items = 1;
}

message BrandVehicleType {
  int32 id = 1;
  string name = 2;
  string catname = 3;
  string items_count = 4;
}

message CreateContactRequest {
  int64 user_id = 1;
}

message DeleteContactRequest {
  int64 user_id = 1;
}

message GetContactRequest {
  int64 user_id = 1;
}

message APIImage {
  int32 id = 1;
  string src = 2;
  int32 width = 3;
  int32 height = 4;
  int32 filesize = 5;
}

message APIUser {
  int64 id = 1;
  string name = 2;
  bool deleted = 3;
  bool long_away = 4;
  bool green = 5;
  repeated string route = 6;
  string identity = 7;
  APIImage avatar = 8;
  string gravatar = 9;
  google.protobuf.Timestamp last_online = 10;
  double specs_weight = 11;
}

message Contact {
  int64 contact_user_id = 1;
  APIUser user = 2;
}

message ContactItems {
  repeated Contact items = 1;
}

message GetContactsRequest {
  repeated string fields = 1;
}

message CommentVoteItems {
  repeated CommentVote items  = 1;
}

message CommentVote {
  enum VoteValue {
    UNKNOWN = 0;
    POSITIVE = -1;
    NEGATIVE = 1;
  }
  VoteValue value = 1;
  APIUser user = 2;
}

message APIBanItem {
  google.protobuf.Timestamp until = 1;
  int64 by_user_id = 2;
  APIUser by_user = 3;
  string reason = 4;
}

message APITrafficTopItem {
  string ip = 1;
  int32 count = 2;
  APIBanItem ban = 3;
  bool in_whitelist = 4;
  string whois_url = 5;
}

message APITrafficTopResponse {
  repeated APITrafficTopItem items = 1;
}

message APIGetIPRequest {
  string ip = 1;
  repeated string fields = 2;
}

message APIIPRights {
  bool add_to_blacklist = 1;
  bool remove_from_blacklist = 2;
}

message APIIP {
  string address = 1;
  string hostname = 2;
  APIBanItem blacklist = 3;
  APIIPRights rights = 4;
}

message APICreateFeedbackRequest {
  string name = 1;
  string email = 2;
  string message = 3;
  string captcha = 4;
}

message DeleteFromTrafficWhitelistRequest {
  string ip = 1;
}

message DeleteFromTrafficBlacklistRequest {
  string ip = 1;
}

message AddToTrafficBlacklistRequest {
  string ip = 1;
  int32 period = 2;
  string reason = 3;
}

message AddToTrafficWhitelistRequest {
  string ip = 1;
}

message APITrafficWhitelistItem {
  string ip = 1;
  string description = 2;
}

message APITrafficWhitelistItems {
  repeated APITrafficWhitelistItem items = 1;
}

message APIForumsUserSummary {
  int32 subscriptionsCount = 1;
}

message APIMessageNewCount {
  int32 count = 1;
}

message APIMessageSummary {
  int32 inbox_count = 1;
  int32 inbox_new_count = 2;
  int32 sent_count = 3;
  int32 system_count = 4;
  int32 system_new_count = 5;
}

message APIDeleteUserRequest {
  int64 user_id = 1;
  string password = 2;
}

message APIMeRequest {
  repeated string fields = 1;
}

message APIGetUserRequest {
  int64 user_id = 1;
  repeated string fields = 2;
}

message GetTopBrandsListRequest {
  string language = 1;
}

message APITopBrandsList {
  repeated APITopBrandsListItem brands = 1;
  int32 total = 2;
}

message APITopBrandsListItem {
  int64 id = 1;
  string catname = 2;
  string name = 3;
  int32 items_count = 4;
  int32 new_items_count = 5;
}

enum PictureItemType {
  PICTURE_UNKNOWN = 0;
  PICTURE_CONTENT = 1;
  PICTURE_AUTHOR = 2;
  PICTURE_COPYRIGHTS = 3;
}

enum ItemType {
  ITEM_TYPE_UNKNOWN    = 0;
  ITEM_TYPE_VEHICLE    = 1;
  ITEM_TYPE_ENGINE     = 2;
  ITEM_TYPE_CATEGORY   = 3;
  ITEM_TYPE_TWINS      = 4;
  ITEM_TYPE_BRAND      = 5;
  ITEM_TYPE_FACTORY    = 6;
  ITEM_TYPE_MUSEUM     = 7;
  ITEM_TYPE_PERSON     = 8;
  ITEM_TYPE_COPYRIGHT  = 9;
}

enum PictureStatus {
  PICTURE_STATUS_UNKNOWN  = 0;
  PICTURE_STATUS_ACCEPTED = 1;
  PICTURE_STATUS_REMOVING = 2;
  PICTURE_STATUS_REMOVED  = 3;
  PICTURE_STATUS_INBOX    = 4;
}

enum ItemPictureType {
  ITEM_PICTURE_UNKNOWN    = 0;
  ITEM_PICTURE_CONTENT    = 1;
  ITEM_PICTURE_AUTHOR     = 2;
  ITEM_PICTURE_COPYRIGHTS = 3;
}

message GetTopPersonsListRequest {
  string language = 1;
  PictureItemType picture_item_type = 2;
}

message GetTopTwinsBrandsListRequest {
  string language = 1;
}

message GetTopCategoriesListRequest {
  string language = 1;
}

message GetTopFactoriesListRequest {
  string language = 1;
}

message APITopPersonsList {
  repeated APITopPersonsListItem items = 1;
}

message APITopPersonsListItem {
  int64 id = 1;
  string name = 3;
}

message APITopTwinsBrandsListItem {
  int64 id = 1;
  string name = 2;
  string catname = 3;
  int32 count = 4;
  int32 new_count = 5;
}

message APITopTwinsBrandsList {
  repeated APITopTwinsBrandsListItem items = 1;
  int32 count = 2;
}

message APITopCategoriesList {
  repeated APITopCategoriesListItem items = 1;
}

message APITopCategoriesListItem {
  int64 id = 1;
  string name = 2;
  string catname = 3;
  int32 count = 4;
  int32 new_count = 5;
}

message APITopFactoriesList {
  repeated APITopFactoriesListItem items = 1;
}

message APITopFactoriesListItem {
  int64 id = 1;
  string name = 2;
  int32 count = 3;
  int32 new_count = 4;
}

message ItemPicturesRequest {
  ItemPictureType type_id = 1;
  PicturesRequest pictures = 2;
  int32 perspective_id = 3;
}

message PicturesRequest {
  PictureStatus status = 1;
  ItemPicturesRequest item_picture = 2;
}

message PictureFields {
  bool name_text = 1;
}

message PreviewPicturesFields {
  bool route = 1;
  PictureFields picture = 2;
}

message ItemFields {
  bool name_html = 1;
  bool name_default = 2;
  bool description = 3;
  bool has_text = 4;
  PreviewPicturesFields preview_pictures = 5;
  bool total_pictures = 6;
}

message ListItemsRequest {
  string language = 1;
  ItemFields fields = 2;
  ItemType type_id = 3;
  ItemPicturesRequest descendant_pictures = 4;
  ItemPicturesRequest preview_pictures = 5;
  uint64 limit = 6;
}

message GetTreeRequest {
  string id = 1;
}

message APITreeItem {
  string id = 1;
  string name = 2;
  repeated APITreeItem childs = 3;
  int32 type = 4;
}

message APIItem {
  int64 id = 1;
  string catname = 2;
  string name = 3;
}

message APIItemList {
  repeated APIItem items = 1;
}

enum CommentsType {
  UNKNOWN = 0;
  PICTURES_TYPE_ID = 1;
  ITEM_TYPE_ID = 2;
  VOTINGS_TYPE_ID = 3;
  ARTICLES_TYPE_ID = 4;
  FORUMS_TYPE_ID = 5;
}

message CommentsSubscribeRequest {
  int64 item_id = 1;
  CommentsType type_id = 2;
}

message CommentsUnSubscribeRequest {
  int64 item_id = 1;
  CommentsType type_id = 2;
}

message GetCommentVotesRequest {
  int64 comment_id = 1;
}

message CommentsViewRequest {
  int64 item_id = 1;
  CommentsType type_id = 2;
}

message CommentsSetDeletedRequest {
  int64 comment_id = 1;
  bool deleted = 2;
}

message CommentsMoveCommentRequest {
  int64 comment_id = 1;
  int64 item_id = 2;
  CommentsType type_id = 3;
}

message CommentsVoteCommentRequest {
  int64 comment_id = 1;
  int32 vote = 2;
}

message CommentsVoteCommentResponse {
  int32 votes = 1;
}

message MapGetPointsRequest {
  bool PointsOnly = 1;
  string bounds = 2;
  string language = 3;
}

message Point {
  double lat = 1;
  double lng = 2;
}

message MapPoints {
  repeated MapPoint points = 1;
}

message MapPoint {
  Point location = 1;
  string id = 2;
  string name = 3;
  repeated string url = 4;
  APIImage image = 5;
}

message PicturesViewRequest {
  int64 picture_id = 1;
}

message PicturesVoteRequest {
  int64 picture_id = 1;
  int32 value = 2;
}

message PicturesVoteSummary {
  int32 value = 1;
  int32 positive = 2;
  int32 negative = 3;
}

message ModerVoteTemplate {
  int64 id = 1;
  int64 userID = 2;
  string message = 3;
  int32 vote = 4;
}

message ModerVoteTemplates {
  repeated ModerVoteTemplate items = 1;
}

message DeleteModerVoteTemplateRequest {
  int64 id = 1;
}

message MessagingDeleteMessage {
  int64 message_id = 1;
}

message MessagingClearFolder {
  string folder = 1;
}

message MessagingCreateMessage {
  int64 user_id = 1;
  string text = 2;
}

message APIMessage {
  int64 id = 1;
  string text = 2;
  bool is_new = 3;
  bool can_delete = 4;
  bool can_reply = 5;
  google.protobuf.Timestamp date = 6;
  bool all_messages_link = 7;
  int32 dialog_count = 8;
  int64 author_id = 9;
  int64 to_user_id = 10;
  int64 dialog_with_user_id = 11;
}

message MessagingGetMessagesRequest {
  int64 user_id = 1;
  string folder = 2;
  int32 page = 3;
}

message MessagingGetMessagesResponse {
  repeated APIMessage items = 1;
  Pages paginator = 2;
}

message Pages {
  int32 pageCount = 1;
  int32 first = 2;
  int32 current = 3;
  int32 next = 5;
  int32 previous = 6;
  int32 firstPageInRange = 7;
  int32 lastPageInRange = 8;
  repeated int32 pagesInRange = 9;
  int32 totalItemCount = 10;
}

message VODDataResponse {
  repeated VODDataDate dates = 1;
  int32 sum = 2;
}

message VODDataDate {
  google.protobuf.Timestamp date = 1;
  bool free = 2;
}

message AboutDataResponse {
  string developer = 1;
  string fr_translator = 2;
  string zh_translator = 3;
  string be_translator = 4;
  string pt_br_translator = 5;
  repeated string contributors = 6;
  int32 total_pictures = 7;
  int32 pictures_size = 8;
  int32 total_users = 9;
  int32 total_items = 10;
  int32 total_comments = 11;
}

message APIUserPreferencesRequest {
  int64 user_id = 1;
}

message APIUserPreferencesResponse {
  bool disable_comments_notifications = 1;
}

message ArticlesRequest {
  uint64 limit = 1;
  uint64 page = 2;
}

message ArticlesResponse {
  repeated Article items = 1;
  Pages paginator = 2;
}

message Article {
  int64 id = 1;
  string name = 2;
  int64 author_id = 3;
  string catname = 4;
  google.protobuf.Timestamp date = 5;
  string html = 6;
  string preview_url = 7;
  string description = 8;
}

message ArticleByCatnameRequest {
  string catname = 1;
}

message APIContentLanguages {
  repeated string languages = 1;
}
